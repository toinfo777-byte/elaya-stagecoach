# app/routers/coach.py
from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from datetime import datetime, timezone

from app.bot.states import CoachStates

router = Router(name="coach")

# –ü–æ–º–µ—á–∞–µ–º, —á—Ç–æ —á—É–≤—Å—Ç–≤–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ (–∫–ª–∞–¥—ë–º –æ—Ç–º–µ—Ç–∫—É –≤ FSM-–¥–∞–Ω–Ω—ã–µ)
async def _mark_feeling_saved(state: FSMContext) -> None:
    await state.update_data(
        coach_last="feeling_saved",
        coach_last_ts=datetime.now(timezone.utc).timestamp(),
    )

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ–¥–∞–≤–Ω–æ (–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö within —Å–µ–∫—É–Ω–¥) —Å–æ—Ö—Ä–∞–Ω—è–ª–∏ —á—É–≤—Å—Ç–≤–æ
async def _recently_saved(state: FSMContext, within: int = 180) -> bool:
    data = await state.get_data()
    ts = data.get("coach_last_ts")
    if not ts:
        return False
    return (datetime.now(timezone.utc).timestamp() - float(ts)) < within and \
           data.get("coach_last") == "feeling_saved"

@router.message(F.text == "/coach_on")
async def coach_on(msg: Message, state: FSMContext):
    await msg.answer(
        "–ö–æ—Ä–æ—Ç–∫–æ: –ø–æ–ø—Ä–æ–±—É–π —ç—Ç–æ ‚Äî –ü–∞—É–∑–∞ –∫–∞–∫ –ø—Ä–∞–≤–¥–∞ (4-2-6-2).\n"
        "–®–∞–≥–∏: –í–¥–æ—Ö 4 ‚Üí –ü–∞—É–∑–∞ 2 ‚Üí –í—ã–¥–æ—Ö 6 ‚Üí –ü–∞—É–∑–∞ 2.\n"
        "–ü—Ä–∏–∑–Ω–∞–∫: –ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ –ø–æ—Å–ª–µ –ø–∞—É–∑—ã?\n"
        "–ó–∞–ø—É—Å—Ç–∏ —Ç–∞–π–º–µ—Ä –∏ –æ—Ç–º–µ—Ç—å –æ—â—É—â–µ–Ω–∏–µ –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º.\n\n"
        "‚è± –¢–∞–π–º–µ—Ä 60 —Å–µ–∫"
    )
    await state.set_state(CoachStates.wait_feeling)

@router.message(CoachStates.wait_feeling, F.text)
async def coach_feeling(msg: Message, state: FSMContext):
    text = (msg.text or "").strip()
    if not text or len(text.split()) > 2 or len(text) > 32:
        await msg.answer("–û–¥–Ω–∏–º –∫–æ—Ä–æ—Ç–∫–∏–º —Å–ª–æ–≤–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ üôÇ")
        return

    # TODO: —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ ¬´—á—É–≤—Å—Ç–≤–æ¬ª –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    await _mark_feeling_saved(state)

    # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –ù–û –¥–∞–Ω–Ω—ã–µ –Ω–µ —á–∏—Å—Ç–∏–º ‚Äî –æ—Ç–º–µ—Ç–∫–∞ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è
    await state.set_state(None)
    await msg.answer("–ì–æ—Ç–æ–≤–æ! –°–æ—Ö—Ä–∞–Ω–∏–ª üëç\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å ‚Äî –Ω–∞—á–Ω–∏ –∑–∞–Ω–æ–≤–æ: /coach_on –∏–ª–∏ –≤–µ—Ä–Ω–∏—Å—å –≤ –º–µ–Ω—é: /menu")

# –ú—è–≥–∫–∞—è –∑–∞—â–∏—Ç–∞ –Ω–∞ 3 –º–∏–Ω—É—Ç—ã –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:
# –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ –∏–Ω–µ—Ä—Ü–∏–∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –ø–∏—Å–∞—Ç—å, –ø—Ä–æ—Å—Ç–æ –ø–æ–¥—Å–∫–∞–∂–µ–º,
# –∞ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è/–∫–Ω–æ–ø–∫–∏ –ù–ï –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º.
@router.message(F.text)
async def coach_post_saved_soft_guard(msg: Message, state: FSMContext):
    # –ö–æ–º–∞–Ω–¥—ã –Ω–µ —Ç—Ä–æ–≥–∞–µ–º ‚Äî –∏—Ö –æ–±—Ä–∞–±–æ—Ç–∞—é—Ç –¥–∞–ª—å—à–µ
    if msg.text and msg.text.startswith("/"):
        return
    # –ï—Å–ª–∏ –Ω–µ–¥–∞–≤–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–ª–∏ ‚Äî –º—è–≥–∫–æ–µ –ø–æ–¥—Å–∫–∞–∑–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if await _recently_saved(state):
        await msg.answer("–Ø —É–∂–µ –∑–∞–ø–∏—Å–∞–ª —Ç–≤–æ—ë –æ—â—É—â–µ–Ω–∏–µ üëå\n–ù–∞—á–∞—Ç—å –µ—â—ë —Ä–∞–∑ ‚Äî /coach_on, –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é ‚Äî /menu")
    # –ò–Ω–∞—á–µ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º ‚Äî –ø—É—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞—é—Ç –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ä–æ—É—Ç–µ—Ä—ã
