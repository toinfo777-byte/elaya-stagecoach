# app/routers/coach.py
from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from datetime import datetime, timedelta, timezone

from app.bot.states import CoachStates

router = Router(name="coach")

# -- —Å–ª—É–∂–µ–±–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –º–∏–º–æ "–º—è–≥–∫–æ–≥–æ –≥–∞—Ä–¥–∞"
ALLOW_SET: set[str] = {
    # –∫–æ–º–∞–Ω–¥—ã
    "/start", "/menu", "/apply", "/training", "/casting",
    "/coach_on", "/coach_off", "/progress", "/privacy",
    "/version", "/health", "/cancel", "/help",
    # —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∏ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é (reply)
    "–ú–µ–Ω—é", "–ü—É—Ç—å –ª–∏–¥–µ—Ä–∞", "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–Ω—è", "–ú–∏–Ω–∏-–∫–∞—Å—Ç–∏–Ω–≥",
    "–ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏", "–ü–æ–ª–∏—Ç–∏–∫–∞", "–ü–æ–º–æ—â—å",
    "–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è", "–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å",
}

async def _get_now_ts() -> float:
    return datetime.now(timezone.utc).timestamp()

# –•–µ–ª–ø–µ—Ä: —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å ¬´–ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥ –∫–æ—É—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω¬ª
async def _mark_feeling_saved(state: FSMContext) -> None:
    data = await state.storage.get_data(bot=state.bot, key=state.key)
    data = dict(data or {})
    data["coach_last"] = "feeling_saved"
    data["coach_last_ts"] = await _get_now_ts()
    await state.storage.set_data(bot=state.bot, key=state.key, data=data)

# –•–µ–ª–ø–µ—Ä: –ø—Ä–æ–≤–µ—Ä–∫–∞ ‚Äî –Ω–µ–¥–∞–≤–Ω–æ —É–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–ª–∏ —á—É–≤—Å—Ç–≤–æ?
async def _recently_saved(state: FSMContext, within: int = 180) -> bool:
    data = await state.storage.get_data(bot=state.bot, key=state.key)
    ts = (data or {}).get("coach_last_ts")
    if not ts:
        return False
    return (await _get_now_ts()) - float(ts) < within and (data or {}).get("coach_last") == "feeling_saved"

# –°—Ç–∞—Ä—Ç –º–∏–Ω–∏-—à–∞–≥–∞ –∫–æ—É—á–∞
@router.message(F.text == "/coach_on")
async def coach_on(msg: Message, state: FSMContext):
    await msg.answer(
        "–ö–æ—Ä–æ—Ç–∫–æ: –ø–æ–ø—Ä–æ–±—É–π —ç—Ç–æ ‚Äî –ü–∞—É–∑–∞ –∫–∞–∫ –ø—Ä–∞–≤–¥–∞ (4-2-6-2).\n"
        "–®–∞–≥–∏: –í–¥–æ—Ö 4 ‚Üí –ü–∞—É–∑–∞ 2 ‚Üí –í—ã–¥–æ—Ö 6 ‚Üí –ü–∞—É–∑–∞ 2.\n"
        "–ü—Ä–∏–∑–Ω–∞–∫: –ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ –ø–æ—Å–ª–µ –ø–∞—É–∑—ã?\n"
        "–ó–∞–ø—É—Å—Ç–∏ —Ç–∞–π–º–µ—Ä –∏ –æ—Ç–º–µ—Ç—å –æ—â—É—â–µ–Ω–∏–µ –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º.\n\n"
        "‚è± –¢–∞–π–º–µ—Ä 60 —Å–µ–∫"
    )
    await state.set_state(CoachStates.wait_feeling)

# –ü—Ä–∏–Ω–∏–º–∞–µ–º –û–î–ù–û —Å–ª–æ–≤–æ –ø–æ—Å–ª–µ —Ç–∞–π–º–µ—Ä–∞
@router.message(CoachStates.wait_feeling, F.text)
async def coach_feeling(msg: Message, state: FSMContext):
    text = (msg.text or "").strip()

    # –ø—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è ¬´–æ–¥–Ω–æ –∫–æ—Ä–æ—Ç–∫–æ–µ —Å–ª–æ–≤–æ¬ª
    if not text or len(text.split()) > 2 or len(text) > 32:
        await msg.answer("–û–¥–Ω–∏–º –∫–æ—Ä–æ—Ç–∫–∏–º —Å–ª–æ–≤–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ üôÇ")
        return

    # —Ç—É—Ç –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –ë–î/–º–µ—Ç—Ä–∏–∫–∏
    # save_feeling(user_id=msg.from_user.id, feeling=text)

    await _mark_feeling_saved(state)
    await state.clear()

    await msg.answer("–ì–æ—Ç–æ–≤–æ! –°–æ—Ö—Ä–∞–Ω–∏–ª üëç\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å ‚Äî –Ω–∞—á–Ω–∏ –∑–∞–Ω–æ–≤–æ: /coach_on –∏–ª–∏ –≤–µ—Ä–Ω–∏—Å—å –≤ –º–µ–Ω—é: /menu")

# –ú—è–≥–∫–∏–π –≥–∞—Ä–¥: —Ä–µ–∞–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞ "–ª–∏—à–Ω–∏–µ" —Ç–µ–∫—Å—Ç—ã, –Ω–æ
# –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã, –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏ —Ç.–ø.
@router.message(F.text)
async def coach_post_saved_soft_guard(msg: Message, state: FSMContext):
    text = (msg.text or "").strip()

    # –ö–æ–º–∞–Ω–¥—ã –∏–ª–∏ —è–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∫ –¥—Ä—É–≥–∏–º —Ä–æ—É—Ç–µ—Ä–∞–º
    if text.startswith("/") or text in ALLOW_SET:
        return

    # –õ—é–±–æ–π –¥—Ä—É–≥–æ–π —Ç–µ–∫—Å—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 3 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ‚Äî –º—è–≥–∫–∏–π –æ—Ç–≤–µ—Ç
    if await _recently_saved(state):
        await msg.answer(
            "–Ø —É–∂–µ –∑–∞–ø–∏—Å–∞–ª —Ç–≤–æ—ë –æ—â—É—â–µ–Ω–∏–µ üëå\n"
            "–ù–∞—á–∞—Ç—å –µ—â—ë —Ä–∞–∑ ‚Äî /coach_on, –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é ‚Äî /menu"
        )
        return
    # –∏–Ω–∞—á–µ –ø—É—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞—é—Ç –¥—Ä—É–≥–∏–µ —Ä–æ—É—Ç–µ—Ä—ã
