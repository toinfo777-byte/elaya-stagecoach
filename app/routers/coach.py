# app/routers/coach.py
from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import SkipHandler
from datetime import datetime, timedelta, timezone

from app.bot.states import CoachStates

router = Router(name="coach")

# --- helpers ---------------------------------------------------------------

async def _mark_feeling_saved(state: FSMContext) -> None:
    data = await state.storage.get_data(bot=state.bot, key=state.key)
    data = dict(data or {})
    data["coach_last"] = "feeling_saved"
    data["coach_last_ts"] = datetime.now(timezone.utc).timestamp()
    await state.storage.set_data(bot=state.bot, key=state.key, data=data)

async def _recently_saved(state: FSMContext, within: int = 180) -> bool:
    data = await state.storage.get_data(bot=state.bot, key=state.key)
    ts = (data or {}).get("coach_last_ts")
    if not ts:
        return False
    fresh = (datetime.now(timezone.utc).timestamp() - float(ts)) < within
    return fresh and (data or {}).get("coach_last") == "feeling_saved"

# --- flow ------------------------------------------------------------------

@router.message(F.text == "/coach_on")
async def coach_on(msg: Message, state: FSMContext):
    await msg.answer(
        "–ö–æ—Ä–æ—Ç–∫–æ: –ø–æ–ø—Ä–æ–±—É–π —ç—Ç–æ ‚Äî –ü–∞—É–∑–∞ –∫–∞–∫ –ø—Ä–∞–≤–¥–∞ (4-2-6-2).\n"
        "–®–∞–≥–∏: –í–¥–æ—Ö 4 ‚Üí –ü–∞—É–∑–∞ 2 ‚Üí –í—ã–¥–æ—Ö 6 ‚Üí –ü–∞—É–∑–∞ 2.\n"
        "–ü—Ä–∏–∑–Ω–∞–∫: –ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ –ø–æ—Å–ª–µ –ø–∞—É–∑—ã?\n"
        "–ó–∞–ø—É—Å—Ç–∏ —Ç–∞–π–º–µ—Ä –∏ –æ—Ç–º–µ—Ç—å –æ—â—É—â–µ–Ω–∏–µ –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º.\n\n"
        "‚è± –¢–∞–π–º–µ—Ä 60 —Å–µ–∫"
    )
    await state.set_state(CoachStates.wait_feeling)

@router.message(CoachStates.wait_feeling, F.text)
async def coach_feeling(msg: Message, state: FSMContext):
    text = (msg.text or "").strip()
    if not text or len(text.split()) > 2 or len(text) > 32:
        await msg.answer("–û–¥–Ω–∏–º –∫–æ—Ä–æ—Ç–∫–∏–º —Å–ª–æ–≤–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ üôÇ")
        return

    # —Ç—É—Ç –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –ë–î/–º–µ—Ç—Ä–∏–∫–∏
    await _mark_feeling_saved(state)
    await state.clear()

    await msg.answer("–ì–æ—Ç–æ–≤–æ! –°–æ—Ö—Ä–∞–Ω–∏–ª üëç\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å ‚Äî –Ω–∞—á–Ω–∏ –∑–∞–Ω–æ–≤–æ: /coach_on –∏–ª–∏ –≤–µ—Ä–Ω–∏—Å—å –≤ –º–µ–Ω—é: /menu")

# –í–ê–ñ–ù–û: —ç—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ù–ï –¥–æ–ª–∂–µ–Ω ¬´—Å—ä–µ–¥–∞—Ç—å¬ª –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
@router.message(F.text)
async def coach_post_saved_soft_guard(msg: Message, state: FSMContext):
    if await _recently_saved(state):
        await msg.answer(
            "–Ø —É–∂–µ –∑–∞–ø–∏—Å–∞–ª —Ç–≤–æ—ë –æ—â—É—â–µ–Ω–∏–µ üëå\n"
            "–ù–∞—á–∞—Ç—å –µ—â—ë —Ä–∞–∑ ‚Äî /coach_on, –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é ‚Äî /menu"
        )
        return
    # –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–∞–ª—å—à–µ –∫ –æ—Å—Ç–∞–ª—å–Ω—ã–º —Ä–æ—É—Ç–µ—Ä–∞–º (–º–µ–Ω—é/—à–æ—Ä—Ç–∫–∞—Ç—ã –∏ —Ç.–¥.)
    raise SkipHandler()
