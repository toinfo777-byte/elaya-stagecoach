from __future__ import annotations

from aiogram import Router, F
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder

from app.routers.help import show_main_menu
from app.keyboards.reply import BTN_SETTINGS
# –í–ê–ñ–ù–û: –±–µ—Ä—ë–º –∑–∞–≥–ª—É—à–∫—É —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ repo_extras, —á—Ç–æ–±—ã –Ω–µ —Ç—è–Ω—É—Ç—å –ë–î-—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é
from app.storage.repo_extras import delete_user  # async-–∑–∞–≥–ª—É—à–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ tg_id

router = Router(name="settings")

SETTINGS_LOCK_KEY = "settings_shown"


def settings_inline_kb():
    kb = InlineKeyboardBuilder()
    kb.button(text="üè† –í –º–µ–Ω—é", callback_data="settings:menu")
    kb.button(text="üóë –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="settings:delete")
    kb.adjust(1)
    return kb.as_markup()


# –ì–ª–æ–±–∞–ª—å–Ω–æ + –∞–Ω—Ç–∏–¥—É–±–ª—å
@router.message(StateFilter("*"), Command("settings"))
@router.message(StateFilter("*"), F.text == BTN_SETTINGS)
async def open_settings(m: Message, state: FSMContext):
    data = await state.get_data()
    if data.get(SETTINGS_LOCK_KEY):
        return
    await state.update_data(**{SETTINGS_LOCK_KEY: True})
    await m.answer(
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏. –ú–æ–∂–µ—à—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é.",
        reply_markup=settings_inline_kb(),
    )


@router.callback_query(F.data == "settings:menu")
async def back_to_menu(cb: CallbackQuery, state: FSMContext):
    await state.clear()
    # –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–æ–≤–Ω–æ —Ç–æ –∂–µ –º–µ–Ω—é, —á—Ç–æ –∏ –ø—Ä–∏ /start
    await show_main_menu(cb)


@router.callback_query(F.data == "settings:delete")
async def delete_profile(cb: CallbackQuery, state: FSMContext):
    await state.clear()
    try:
        await delete_user(cb.from_user.id)  # –∑–∞–≥–ª—É—à–∫–∞ ‚Äî –≤—Å–µ–≥–¥–∞ ¬´—É—Å–ø–µ—Ö¬ª
        text = "–ì–æ—Ç–æ–≤–æ. –ü—Ä–æ—Ñ–∏–ª—å —É–¥–∞–ª—ë–Ω."
    except Exception:
        text = "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ."
    await cb.message.answer(text)
    await show_main_menu(cb)
