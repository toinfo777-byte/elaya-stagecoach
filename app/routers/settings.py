# app/routers/settings.py
from __future__ import annotations

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

# –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã UI (fallback, –µ—Å–ª–∏ –≤–¥—Ä—É–≥ –Ω–µ—Ç –º–æ–¥—É–ª–µ–π)
try:
    from app.keyboards.reply import BTN_SETTINGS, main_menu_kb
except Exception:
    BTN_SETTINGS = "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"
    def main_menu_kb():
        return None  # –±–µ–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Ç–æ–∂–µ –æ–∫

# –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏–º–ø–æ—Ä—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
try:
    from app.storage.repo_extras import delete_user  # async
except Exception:
    async def delete_user(tg_id: int) -> None:  # fallback no-op
        return

router = Router(name="settings")

# ----- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã -----
def settings_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å –º–æ–∏ –¥–∞–Ω–Ω—ã–µ", callback_data="set:del:ask")],
        [InlineKeyboardButton(text="üè† –í –º–µ–Ω—é", callback_data="go:menu")],
    ])

def confirm_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="–î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data="set:del:yes"),
            InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="set:del:no"),
        ]
    ])

# ----- –•—ç–Ω–¥–ª–µ—Ä—ã -----
@router.message(Command("settings"))
@router.message(F.text == BTN_SETTINGS)
async def show_settings(m: Message):
    await m.answer(
        "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>\n\n"
        "‚Äî –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º.\n"
        "‚Äî –û—Å—Ç–∞–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ –ø–æ—è–≤—è—Ç—Å—è –ø–æ–∑–∂–µ.",
        reply_markup=settings_kb(),
    )

@router.callback_query(F.data == "set:del:ask")
async def ask_delete(cb: CallbackQuery):
    await cb.answer()
    await cb.message.answer(
        "‚ùóÔ∏è –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö (tg_id, –ª–æ–∫–∞–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏ –ø—Ä.). –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ.",
        reply_markup=confirm_kb(),
    )

@router.callback_query(F.data == "set:del:no")
async def cancel_delete(cb: CallbackQuery):
    await cb.answer("–û—Ç–º–µ–Ω–∞")
    await cb.message.answer("–û–∫, –Ω–∏—á–µ–≥–æ –Ω–µ —É–¥–∞–ª—è–ª. –í–æ–∑–≤—Ä–∞—â–∞—é –≤ –º–µ–Ω—é.", reply_markup=main_menu_kb())

@router.callback_query(F.data == "set:del:yes")
async def do_delete(cb: CallbackQuery):
    await cb.answer()
    try:
        await delete_user(cb.from_user.id)
        await cb.message.answer("–ì–æ—Ç–æ–≤–æ. –î–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã. –í–æ–∑–≤—Ä–∞—â–∞—é –≤ –º–µ–Ω—é.", reply_markup=main_menu_kb())
    except Exception:
        # –ù–µ —Ä–æ–Ω—è–µ–º –ø–æ—Ç–æ–∫, –ø—Ä–æ—Å—Ç–æ —Å–æ–æ–±—â–∞–µ–º
        await cb.message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å–µ–π—á–∞—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", reply_markup=main_menu_kb())

__all__ = ["router", "show_settings"]
