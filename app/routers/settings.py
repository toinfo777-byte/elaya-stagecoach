from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

router = Router(name="settings")

# ‚Äî –º–∞–ª–µ–Ω—å–∫–∏–π —Ö–µ–ª–ø–µ—Ä: –º–∞—Ç—á –ø–æ –ø–æ–¥—Å—Ç—Ä–æ–∫–µ –±–µ–∑ —É—á—ë—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞ (–∏ —Å —ç–º–æ–¥–∑–∏ –≤ –Ω–∞—á–∞–ª–µ)
def _contains(substr: str):
    return F.text.func(lambda t: isinstance(t, str) and substr.lower() in t.lower())

# ===== –ö–æ–º–∞–Ω–¥–∞ /settings –∏ –∫–Ω–æ–ø–∫–∞ ¬´–ù–∞—Å—Ç—Ä–æ–π–∫–∏¬ª =====
@router.message(F.text == "/settings")
@router.message(_contains("–ù–∞—Å—Ç—Ä–æ–π–∫–∏"))
async def settings_entry(msg: Message):
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üßπ –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="settings:delete")],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –í –º–µ–Ω—é", callback_data="settings:menu")],
    ])
    await msg.answer(
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏.\n\n–ú–æ–∂–µ—à—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é.",
        reply_markup=kb,
    )

# ===== –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è: –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ =====
@router.callback_query(F.data == "settings:delete")
async def settings_delete_confirm(cb: CallbackQuery):
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data="settings:delete:yes"),
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="settings:delete:no"),
        ]
    ])
    await cb.message.edit_text(
        "üßπ –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ.",
        reply_markup=kb,
    )
    await cb.answer()

# ===== –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è: –¥–∞/–Ω–µ—Ç =====
@router.callback_query(F.data == "settings:delete:no")
async def settings_delete_no(cb: CallbackQuery):
    await cb.message.edit_text("–û—Ç–º–µ–Ω–µ–Ω–æ. –ù–∏–∫—É–¥–∞ –Ω–µ –¥–µ–ª–∏—Å—å üôÇ")
    await cb.answer()

@router.callback_query(F.data == "settings:delete:yes")
async def settings_delete_yes(cb: CallbackQuery):
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –ë–î, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ.
    # –ù–∞–ø—Ä–∏–º–µ—Ä: await repo.delete_user(cb.from_user.id)
    await cb.message.edit_text("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —É–¥–∞–ª—ë–Ω. –ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å ‚Äî –Ω–∞–ø–∏—à–∏ /start.")
    await cb.answer()

# ===== ¬´–í –º–µ–Ω—é¬ª (–∏–Ω–ª–∞–π–Ω –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫) =====
@router.callback_query(F.data == "settings:menu")
async def settings_to_menu(cb: CallbackQuery):
    # –ø—Ä–æ—Å—Ç–æ –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É ‚Äî —Ç–≤–æ—ë –º–µ–Ω—é —É–∂–µ –¥–µ–ª–∞–µ—Ç –æ—Å—Ç–∞–ª—å–Ω–æ–µ
    await cb.message.edit_text("–û–∫! –û—Ç–∫—Ä–æ–π –º–µ–Ω—é: /menu")
    await cb.answer()

# ===== –ù–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –∫–Ω–æ–ø–∫—É ¬´–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å¬ª —Å–¥–µ–ª–∞–ª–∏ reply-–∫–Ω–æ–ø–∫–æ–π =====
@router.message(_contains("–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"))
async def settings_delete_from_reply_button(msg: Message):
    # –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–≥–∏–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∏–Ω–ª–∞–π–Ω
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data="settings:delete:yes"),
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="settings:delete:no"),
        ]
    ])
    await msg.answer("üßπ –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ.", reply_markup=kb)
