# app/routers/common.py
from __future__ import annotations

from aiogram import Router, F
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

from app.keyboards.reply import main_menu_kb

router = Router(name="common")

async def _open_menu(msg: Message, state: FSMContext, greet: bool = False):
    await state.clear()
    if greet:
        await msg.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –≠–ª–∞–π—è ‚Äî —Ç—Ä–µ–Ω–µ—Ä —Å—Ü–µ–Ω—ã. –ü–æ–º–æ–≥—É –ø—Ä–æ–∫–∞—á–∞—Ç—å –≥–æ–ª–æ—Å –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å.")
    await msg.answer("–ì–æ—Ç–æ–≤–æ! –û—Ç–∫—Ä—ã–≤–∞—é –º–µ–Ω—é.", reply_markup=main_menu_kb())

# ‚úÖ –æ–¥–∏–Ω —Ö–µ–Ω–¥–ª–µ—Ä –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥ ‚Äî –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
@router.message(StateFilter("*"), Command(commands=["menu", "start", "cancel"]))
async def menu_start_cancel(message: Message, state: FSMContext):
    cmd = (message.text or "").lstrip("/").split()[0].lower()
    await _open_menu(message, state, greet=(cmd == "start"))

# —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ ¬´–≤ –º–µ–Ω—é¬ª
@router.message(StateFilter("*"), F.text.in_({"–í –º–µ–Ω—é", "–ú–µ–Ω—é", "üè† –í –º–µ–Ω—é"}))
async def text_to_menu(message: Message, state: FSMContext):
    await _open_menu(message, state)

# –∏–Ω–ª–∞–π–Ω ¬´–≤ –º–µ–Ω—é¬ª –∏–∑ callback‚Äô–æ–≤ (–¥–æ–±–∞–≤–∏–ª–∏ core:menu)
@router.callback_query(StateFilter("*"), F.data.in_({"go:menu", "to_menu", "core:menu"}))
async def cb_to_menu(cb: CallbackQuery, state: FSMContext):
    await state.clear()
    await cb.answer()
    await cb.message.answer("–ì–æ—Ç–æ–≤–æ! –û—Ç–∫—Ä—ã–≤–∞—é –º–µ–Ω—é.", reply_markup=main_menu_kb())
