# app/routers/common.py
from __future__ import annotations

from aiogram import Router, F
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

from app.keyboards.reply import main_menu_kb

router = Router(name="common")

async def _to_menu_msg(msg: Message, state: FSMContext):
    await state.clear()
    await msg.answer("–ì–æ—Ç–æ–≤–æ! –û—Ç–∫—Ä—ã–≤–∞—é –º–µ–Ω—é.", reply_markup=main_menu_kb())

# /menu, /start, /cancel –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ ‚Äî –∏–∑ –õ–Æ–ë–û–ì–û —Å–æ—Å—Ç–æ—è–Ω–∏—è
@router.message(StateFilter("*"), Command({"menu", "start", "cancel"}))
@router.message(StateFilter("*"), F.text.in_({"–í –º–µ–Ω—é", "–ú–µ–Ω—é", "üè† –í –º–µ–Ω—é"}))
async def go_menu(msg: Message, state: FSMContext):
    # /start ‚Äî –∫–æ—Ä–æ—Ç–∫–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–µ—Ä–µ–¥ –º–µ–Ω—é (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
    if isinstance(msg, Message) and msg.text and msg.text.strip().lower() == "/start":
        await state.clear()
        await msg.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –≠–ª–∞–π—è ‚Äî —Ç—Ä–µ–Ω–µ—Ä —Å—Ü–µ–Ω—ã. –ü–æ–º–æ–≥—É –ø—Ä–æ–∫–∞—á–∞—Ç—å –≥–æ–ª–æ—Å –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å.")
    await _to_menu_msg(msg, state)

# –∏–Ω–ª–∞–π–Ω ¬´–≤ –º–µ–Ω—é¬ª
@router.callback_query(StateFilter("*"), F.data.in_({"go:menu", "to_menu"}))
async def cb_go_menu(cb: CallbackQuery, state: FSMContext):
    await state.clear()
    await cb.answer()
    await cb.message.answer("–ì–æ—Ç–æ–≤–æ! –û—Ç–∫—Ä—ã–≤–∞—é –º–µ–Ω—é.", reply_markup=main_menu_kb())
