# app/routers/progress.py
from __future__ import annotations

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message

# –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã UI
try:
    from app.keyboards.reply import BTN_PROGRESS, main_menu_kb
except Exception:
    BTN_PROGRESS = "üìà –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å"
    def main_menu_kb():
        return None

# –ü—ã—Ç–∞–µ–º—Å—è –≤–∑—è—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å–∞; –∏–Ω–∞—á–µ ‚Äî –∑–∞–≥–ª—É—à–∫–∞
try:
    from app.storage.repo import progress as _progress_repo  # ProgressRepo singleton
except Exception:
    _progress_repo = None

router = Router(name="progress")


async def _get_summary(user_id: int):
    """
    –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–¥–∫–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.
    –û–∂–∏–¥–∞–µ–º—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å ProgressRepo.get_summary(user_id=...)
    """
    if _progress_repo is None:
        # –ó–∞–≥–ª—É—à–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
        class _Dummy:
            async def get_summary(self, *, user_id: int):
                from dataclasses import dataclass
                from typing import List, Tuple
                @dataclass
                class Summary:
                    streak: int
                    episodes_7d: int
                    points_7d: int
                    last_days: List[Tuple[str, int]]
                return Summary(streak=0, episodes_7d=0, points_7d=0, last_days=[])
        return await _Dummy().get_summary(user_id=user_id)
    return await _progress_repo.get_summary(user_id=user_id)


def _format_summary(s) -> str:
    # s.last_days: [(YYYY-MM-DD, count)]
    days_lines = []
    for d, c in (s.last_days or []):
        box = "‚ñ†" if c > 0 else "‚ñ°"
        days_lines.append(f"{d}: {box} x{c}")
    days_block = "\n".join(days_lines) if days_lines else "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –∑–∞ 7 –¥–Ω–µ–π."

    return (
        "üìà <b>–¢–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å</b>\n\n"
        f"üî• –°–µ—Ä–∏—è –ø–æ –¥–Ω—è–º: <b>{s.streak}</b>\n"
        f"‚úÖ –≠–ø–∏–∑–æ–¥–æ–≤ –∑–∞ 7 –¥–Ω–µ–π: <b>{s.episodes_7d}</b>\n"
        f"‚≠êÔ∏è –ë–∞–ª–ª–æ–≤ –∑–∞ 7 –¥–Ω–µ–π: <b>{s.points_7d}</b>\n\n"
        f"{days_block}\n\n"
        "–ü—Ä–æ–¥–æ–ª–∂–∞–π! –õ—é–±–∞—è –∫–æ—Ä–æ—Ç–∫–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è."
    )


@router.message(Command("progress"))
@router.message(F.text == BTN_PROGRESS)
async def show_progress(m: Message):
    summary = await _get_summary(m.from_user.id)
    await m.answer(_format_summary(summary), reply_markup=main_menu_kb())


# –ê–ª–∏–∞—Å –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
progress_router = router
__all__ = ["router", "progress_router", "show_progress"]
