from __future__ import annotations

from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message

from app.storage.repo import progress  # —Å–∏–Ω–≥–ª—Ç–æ–Ω ProgressRepo

router = Router(name="progress")


def _days_bar(last_days: list[tuple[str, int]]) -> str:
    """
    –†–∏—Å—É–µ–º –ø—Ä–æ—Å—Ç—É—é –ø–æ–ª–æ—Å–∫—É –∑–∞ 7 –¥–Ω–µ–π: ‚óªÔ∏é/‚ñ†
    """
    cells = []
    for _, cnt in last_days:
        cells.append("‚ñ†" if cnt > 0 else "‚óªÔ∏é")
    return "".join(cells)


async def show_progress(m: Message):
    s = await progress.get_summary(user_id=m.from_user.id)
    bar = _days_bar(s.last_days)
    text = (
        "<b>–ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å</b>\n\n"
        f"‚Ä¢ –°—Ç—Ä–∏–∫: <b>{s.streak}</b>\n"
        f"‚Ä¢ –≠–ø–∏–∑–æ–¥–æ–≤ –∑–∞ 7 –¥–Ω–µ–π: <b>{s.episodes_7d}</b>\n"
        f"‚Ä¢ –û—á–∫–æ–≤ –∑–∞ 7 –¥–Ω–µ–π: <b>{s.points_7d}</b>\n\n"
        f"{bar}\n"
        "–ü—Ä–æ–¥–æ–ª–∂–∞–π –∫–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî ¬´–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–Ω—è¬ª –≤ –æ–¥–∏–Ω –∫–ª–∏–∫ üü°"
    )
    await m.answer(text)


# –ö–æ–º–∞–Ω–¥–∞ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
@router.message(Command("progress"))
async def cmd_progress(m: Message):
    await show_progress(m)


# –£—Ç–∏–ª–∏—Ç–∞: –º–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –∏–∑ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
async def record_training_episode(m: Message, points: int = 1):
    await progress.add_episode(user_id=m.from_user.id, kind="training", points=points)
