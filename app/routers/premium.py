from __future__ import annotations

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton

from app.keyboards.menu import BTN_PREMIUM
from app.storage.repo import session_scope
from app.storage.models import Feedback  # –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å; –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å

router = Router(name="premium")

def kb_premium_menu() -> ReplyKeyboardMarkup:
    rows = [
        [KeyboardButton(text="–ß—Ç–æ –≤–Ω—É—Ç—Ä–∏"), KeyboardButton(text="–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")],
        [KeyboardButton(text="–ú–æ–∏ –∑–∞—è–≤–∫–∏"), KeyboardButton(text="ü´° –í –º–µ–Ω—é")],
    ]
    return ReplyKeyboardMarkup(keyboard=rows, resize_keyboard=True, is_persistent=True)

@router.message(Command("premium"))
@router.message(F.text == BTN_PREMIUM)
async def premium_entry(msg: Message) -> None:
    await msg.answer(
        "‚≠êÔ∏è –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è\n\n"
        "‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Ä–∞–∑–±–æ—Ä –∏ –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å\n"
        "‚Ä¢ –†–∞–∑–æ–≥—Ä–µ–≤ –≥–æ–ª–æ—Å–∞, –¥–∏–∫—Ü–∏–∏ –∏ –≤–Ω–∏–º–∞–Ω–∏—è\n"
        "‚Ä¢ –ú–∏–Ω–∏-–∫–∞—Å—Ç–∏–Ω–≥ –∏ –ø—É—Ç—å –ª–∏–¥–µ—Ä–∞\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=kb_premium_menu()
    )

@router.message(F.text == "–ß—Ç–æ –≤–Ω—É—Ç—Ä–∏")
async def premium_inside(msg: Message) -> None:
    await msg.answer(
        "–í–Ω—É—Ç—Ä–∏ ‚Äî —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏, –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å, –∑–∞–¥–∞–Ω–∏—è –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.\n"
        "–ú–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å –≤ –ª—é–±–æ–π –¥–µ–Ω—å. –ù–∞–ø–∏—à–∏—Ç–µ –∑–∞—è–≤–∫—É ‚Äî —Å–≤—è–∂–µ–º—Å—è.", reply_markup=kb_premium_menu()
    )

@router.message(F.text == "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")
async def premium_leave_request(msg: Message) -> None:
    # –°–æ—Ö—Ä–∞–Ω–∏–º ¬´–∑–∞—è–≤–∫—É¬ª –∫–∞–∫ feedback —Å context='premium' (–µ—Å–ª–∏ –Ω–µ—Ç —Ç–∞–±–ª–∏—Ü—ã ‚Äî –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ Event)
    with session_scope() as s:
        try:
            s.add(Feedback(
                user_id=None,  # –µ—Å–ª–∏ –µ—Å—Ç—å current_user.id ‚Äî –ø–æ–¥—Å—Ç–∞–≤—å—Ç–µ
                context="premium",
                text=f"request from tg:{msg.from_user.id} @{msg.from_user.username or '-'}",
            ))
            # session_scope —Å–∞–º –∫–æ–º–º–∏—Ç–∏—Ç
        except Exception:
            pass

    await msg.answer("–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ ‚úÖ (–±–µ–∑ –∑–∞–ø–∏—Å–∏ –≤ –ë–î). –ú—ã —Å–≤—è–∂–µ–º—Å—è –∏–ª–∏ –≤–∫–ª—é—á–∏–º –¥–æ—Å—Ç—É–ø –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.", reply_markup=kb_premium_menu())

@router.message(F.text == "–ú–æ–∏ –∑–∞—è–≤–∫–∏")
async def premium_my_requests(msg: Message) -> None:
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –≤—ã–≤–æ–¥ (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–π –≤—ã–±–æ—Ä–∫–∏)
    await msg.answer("–ú–æ–∏ –∑–∞—è–≤–∫–∏:\n‚Ä¢ #1 ‚Äî –Ω–æ–≤–∞—è ‚óè", reply_markup=kb_premium_menu())

@router.message(F.text == "ü´° –í –º–µ–Ω—é")
async def premium_back_to_menu(msg: Message) -> None:
    from app.keyboards.menu import main_menu
    await msg.answer("–û–∫, –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –ù–∞–∂–º–∏ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É.", reply_markup=main_menu())
