# app/routers/premium.py
from __future__ import annotations

from aiogram import Router, F, types
from aiogram.filters import Command
from aiogram.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
)

from app.keyboards.menu import (
    BTN_PREMIUM,
    main_menu,
)

router = Router(name="premium")

# ---------- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–µ–º–∏—É–º-–±–ª–æ–∫–∞ ----------
def premium_kb() -> ReplyKeyboardMarkup:
    rows = [
        [KeyboardButton(text="–ß—Ç–æ –≤–Ω—É—Ç—Ä–∏")],
        [KeyboardButton(text="–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")],
        [KeyboardButton(text="–ú–æ–∏ –∑–∞—è–≤–∫–∏")],
        [KeyboardButton(text="üì£ –í –º–µ–Ω—é")],
    ]
    return ReplyKeyboardMarkup(keyboard=rows, resize_keyboard=True, is_persistent=True)


# ---------- –¢–µ–∫—Å—Ç—ã ----------
PREMIUM_INTRO = (
    "‚≠êÔ∏è <b>–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è</b>\n\n"
    "‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Ä–∞–∑–±–æ—Ä –∏ –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å\n"
    "‚Ä¢ –†–∞–∑–æ–≥—Ä–µ–≤ –≥–æ–ª–æ—Å–∞, –¥–∏–∫—Ü–∏–∏ –∏ –≤–Ω–∏–º–∞–Ω–∏—è\n"
    "‚Ä¢ –ú–∏–Ω–∏-–∫–∞—Å—Ç–∏–Ω–≥ –∏ –ø—É—Ç—å –ª–∏–¥–µ—Ä–∞\n\n"
    "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
)

PREMIUM_WHATS_INSIDE = (
    "–í–Ω—É—Ç—Ä–∏ ‚Äî —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏, –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å. "
    "–ó–∞–ø—Ä–æ—Å—ã –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏–Ω–∏–º–∞–µ–º —á–µ—Ä–µ–∑ ¬´–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É¬ª."
)


# ===================== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò =====================

async def _open_premium(message: types.Message) -> None:
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Ö–æ–¥–Ω–æ–µ –º–µ–Ω—é –ø—Ä–µ–º–∏—É–º–∞."""
    await message.answer(PREMIUM_INTRO, reply_markup=premium_kb())


# 1) –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–µ–º–∏—É–º: –∫–æ–º–∞–Ω–¥–∞ /premium
@router.message(Command("premium"))
async def premium_cmd(message: types.Message) -> None:
    await _open_premium(message)


# 2) –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–µ–º–∏—É–º: –∫–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é (–∏–ª–∏ –≥–¥–µ —É–≥–æ–¥–Ω–æ)
@router.message(F.text == BTN_PREMIUM)
async def premium_btn(message: types.Message) -> None:
    await _open_premium(message)


# 3) –ß—Ç–æ –≤–Ω—É—Ç—Ä–∏
@router.message(F.text == "–ß—Ç–æ –≤–Ω—É—Ç—Ä–∏")
async def premium_inside(message: types.Message) -> None:
    await message.answer(PREMIUM_WHATS_INSIDE, reply_markup=premium_kb())


# 4) –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É ‚Äî –∑–¥–µ—Å—å –ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ –∑–∞–≥–ª—É—à–∫–∞ (–ª–æ–≥–∏–∫–∞ –∑–∞—è–≤–∫–∏ —É –≤–∞—Å –≤ apply/lead)
@router.message(F.text == "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")
async def premium_apply(message: types.Message) -> None:
    await message.answer(
        "–ù–∞–ø–∏—à–∏—Ç–µ —Ü–µ–ª—å –æ–¥–Ω–æ–π —Ñ—Ä–∞–∑–æ–π (–¥–æ 200 —Å–∏–º–≤–æ–ª–æ–≤). –ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ ‚Äî –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel.",
        reply_markup=premium_kb(),
    )
    # –µ—Å–ª–∏ –Ω—É–∂–Ω–æ —Å—Ä–∞–∑—É –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å –≤ FSM ¬´–ü—É—Ç—å –ª–∏–¥–µ—Ä–∞¬ª, –º–æ–∂–Ω–æ —Ç—É—Ç –≤—ã–∑—ã–≤–∞—Ç—å –≤–∞—à —Ö–µ–Ω–¥–ª–µ—Ä –∏–∑ routers.apply


# 5) –ú–æ–∏ –∑–∞—è–≤–∫–∏ ‚Äî –∑–∞–≥–ª—É—à–∫–∞/—Å–ø–∏—Å–æ–∫ (–µ—Å–ª–∏ –ª–æ–≥–∏–∫–∞ —É–∂–µ –µ—Å—Ç—å –≤ –¥—Ä—É–≥–æ–º —Ä–æ—É—Ç–µ—Ä–µ, –º–æ–∂–Ω–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç–Ω—É—Ç—å —Ç—É–¥–∞)
@router.message(F.text == "–ú–æ–∏ –∑–∞—è–≤–∫–∏")
async def premium_my_requests(message: types.Message) -> None:
    await message.answer("–ó–∞—è–≤–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç.", reply_markup=premium_kb())


# 6) –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@router.message(F.text == "üì£ –í –º–µ–Ω—é")
async def premium_back_to_menu(message: types.Message) -> None:
    await message.answer("–û–∫, –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –ù–∞–∂–º–∏ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É.", reply_markup=main_menu())
