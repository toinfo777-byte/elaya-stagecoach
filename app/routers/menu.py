# app/routers/menu.py
from __future__ import annotations

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import (
    Message,
    CallbackQuery,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
)

router = Router(name="menu")


# ---------- helpers ----------

def main_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üèãÔ∏è‚Äç‚ôÄÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–Ω—è", callback_data="menu_training"),
            InlineKeyboardButton(text="üìà –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å",     callback_data="menu_progress"),
        ],
        [
            InlineKeyboardButton(text="üß≠ –ü—É—Ç—å –ª–∏–¥–µ—Ä–∞ (–∑–∞—è–≤–∫–∞)", callback_data="menu_apply"),
            InlineKeyboardButton(text="ü§ñ –ù–∞—Å—Ç–∞–≤–Ω–∏–∫: —Å–ø—Ä–æ—Å–∏—Ç—å",  callback_data="menu_ask"),
        ],
        [
            InlineKeyboardButton(text="üîê –ü–æ–ª–∏—Ç–∏–∫–∞ / —É–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", callback_data="menu_privacy"),
        ],
        [
            InlineKeyboardButton(text="‚ùì –°–ø—Ä–∞–≤–∫–∞", callback_data="menu_help"),
        ],
    ])


# ---------- commands ----------

@router.message(Command("menu"))
async def menu_cmd(m: Message):
    await m.answer("–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_kb())


# ---------- callbacks ----------

@router.callback_query(F.data == "menu_training")
async def menu_training(cb: CallbackQuery):
    # –ü—Ä–æ—Å—Ç–æ ¬´–ø–µ—Ä–µ–∞–¥—Ä–µ—Å—É–µ–º¬ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É /training
    await cb.message.answer("/training")
    await cb.answer()

@router.callback_query(F.data == "menu_progress")
async def menu_progress(cb: CallbackQuery):
    await cb.message.answer("/progress")
    await cb.answer()

@router.callback_query(F.data == "menu_apply")
async def menu_apply(cb: CallbackQuery):
    await cb.message.answer("/apply")
    await cb.answer()

@router.callback_query(F.data == "menu_ask")
async def menu_ask(cb: CallbackQuery):
    # –ü–æ–¥—Å–∫–∞–∂–µ–º, –∫–∞–∫ —Å–ø—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞
    await cb.message.answer("–ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–æ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å –∏ –∑–∞–ø—É—Å—Ç–∏ —Å–µ—Å—Å–∏—é –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞ –∫–æ–º–∞–Ω–¥–æ–π /coach_on\n"
                            "–ü—Ä–∏–º–µ—Ä: ¬´/ask –∑–∞–∂–∏–º –≤ –≥–æ—Ä–ª–µ¬ª")
    await cb.answer()


# ---------- privacy & wipe (–ª–µ–Ω–∏–≤—ã–µ –∏–º–ø–æ—Ä—Ç—ã –∏–∑ system.py) ----------

@router.callback_query(F.data == "menu_privacy")
async def menu_privacy(cb: CallbackQuery):
    # –í–ê–ñ–ù–û: –∏–º–ø–æ—Ä—Ç –≤–Ω—É—Ç—Ä–∏ —Ö–µ–Ω–¥–ª–µ—Ä–∞ ‚Üí –Ω–µ –±—É–¥–µ—Ç –∫—Ä—É–≥–æ–≤–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    from app.routers.system import PRIVACY_TEXT
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="menu_wipe")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",   callback_data="menu_back")],
    ])
    await cb.message.answer(PRIVACY_TEXT + "\n\n–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: /wipe_me ‚Äî –ø–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è.",
                            reply_markup=kb)
    await cb.answer()


@router.callback_query(F.data == "menu_wipe")
async def menu_wipe(cb: CallbackQuery, state: FSMContext):
    # –õ–µ–Ω–∏–≤—ã–µ –∏–º–ø–æ—Ä—Ç—ã –∏–∑ system.py
    from app.routers.system import WipeFlow, _wipe_kb
    await state.set_state(WipeFlow.confirm)
    await cb.message.answer(
        "‚ö†Ô∏è –í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∏ –≤—Å–µ –∑–∞–ø–∏—Å–∏. –î–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å?",
        reply_markup=_wipe_kb()
    )
    await cb.answer()


@router.callback_query(F.data == "menu_back")
async def menu_back(cb: CallbackQuery):
    await cb.message.answer("–û–∫, —á—Ç–æ –¥–∞–ª—å—à–µ?", reply_markup=main_kb())
    await cb.answer()


# ---------- —Å–ø—Ä–∞–≤–∫–∞ ----------

@router.callback_query(F.data == "menu_help")
async def menu_help(cb: CallbackQuery):
    text = (
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/start ‚Äî –Ω–∞—á–∞—Ç—å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥\n"
        "/menu ‚Äî –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é\n"
        "/training ‚Äî —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–Ω—è\n"
        "/progress ‚Äî –º–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å\n"
        "/apply ‚Äî –ü—É—Ç—å –ª–∏–¥–µ—Ä–∞ (–∑–∞—è–≤–∫–∞)\n"
        "/coach_on ‚Äî –≤–∫–ª—é—á–∏—Ç—å –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞\n"
        "/coach_off ‚Äî –≤—ã–∫–ª—é—á–∏—Ç—å –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞\n"
        "/ask <–≤–æ–ø—Ä–æ—Å> ‚Äî —Å–ø—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞\n"
        "/privacy ‚Äî –ø–æ–ª–∏—Ç–∏–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö\n"
        "/wipe_me ‚Äî —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"
    )
    await cb.message.answer(text)
    await cb.answer()
