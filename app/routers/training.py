from __future__ import annotations
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message

router = Router(name="training")

ENTRY_TEXTS = {
    "üèãÔ∏è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–Ω—è", "—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–Ω—è", "training", "—É—Ä–æ–≤–µ–Ω—å 1",
}

@router.message(Command("training"))
@router.message(F.text.casefold().in_(ENTRY_TEXTS))
async def training_entry(m: Message):
    # –ü—Ä–æ—Å—Ç–æ–π, –Ω–æ ¬´–∑–∞–∫–æ–Ω—á–µ–Ω–Ω—ã–π¬ª —Å—Ü–µ–Ω–∞—Ä–∏–π: —Å—Ä–∞–∑—É –≤—ã–¥–∞—ë–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –¥–Ω—è
    await m.answer(
        "‚ú® <b>–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–Ω—è</b>\n\n"
        "1) –í—Å—Ç–∞–Ω—å. –ü–æ—á—É–≤—Å—Ç–≤—É–π –æ–ø–æ—Ä—É —Å—Ç–æ–ø.\n"
        "2) 5 —Å–ø–æ–∫–æ–π–Ω—ã—Ö –≤–¥–æ—Ö–æ–≤/–≤—ã–¥–æ—Ö–æ–≤. –ù–∞ –≤–¥–æ—Ö–µ ‚Äî –≤–Ω–∏–º–∞–Ω–∏–µ –≤ —Å–µ—Ä–¥—Ü–µ, –Ω–∞ –≤—ã–¥–æ—Ö–µ ‚Äî –≤ –º–∏—Ä.\n"
        "3) –ü—Ä–æ–∏–∑–Ω–µ—Å–∏ –≤—Å–ª—É—Ö –∫–æ—Ä–æ—Ç–∫—É—é —Ñ—Ä–∞–∑—É —Ç–µ–∫—Å—Ç–∞ (–ª—é–±—É—é). –°–æ—Ö—Ä–∞–Ω—è–π –º—è–≥–∫–∏–π —Ç–µ–º–±—Ä.\n"
        "4) –ü–æ–≤—Ç–æ—Ä–∏ 3 –º–∏–Ω—É—Ç—ã.\n\n"
        "‚úÖ –ö–æ–≥–¥–∞ –∑–∞–≤–µ—Ä—à–∏—à—å ‚Äî –≤–µ—Ä–Ω–∏—Å—å –≤ –º–µ–Ω—é: /menu"
    )

# üîÅ –®–ò–ú –î–õ–Ø –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò –°–û –°–¢–ê–†–´–ú –ö–û–î–û–ú
# –†–∞–Ω—å—à–µ cmd_aliases –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–ª show_training_levels ‚Äî –≤–µ—Ä–Ω—ë–º –∏–º—è.
async def show_training_levels(m: Message):
    # –ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é —Ç–æ—á–∫—É –≤—Ö–æ–¥–∞
    await training_entry(m)

__all__ = ["router", "training_entry", "show_training_levels"]
