# app/routers/training.py
from __future__ import annotations

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

router = Router(name="training")  # <-- main.py –∂–¥—ë—Ç r_training.router

def _levels_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–£—Ä–æ–≤–µ–Ω—å 1", callback_data="tr:l1")],
        [InlineKeyboardButton(text="–£—Ä–æ–≤–µ–Ω—å 2", callback_data="tr:l2")],
        [InlineKeyboardButton(text="–£—Ä–æ–≤–µ–Ω—å 3", callback_data="tr:l3")],
        [InlineKeyboardButton(text="üè† –í –º–µ–Ω—é", callback_data="go:menu")],
    ])

def _done_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –í—ã–ø–æ–ª–Ω–∏–ª(–∞)", callback_data="tr:done")],
        [InlineKeyboardButton(text="üè† –í –º–µ–Ω—é", callback_data="go:menu")],
    ])

L1_TEXT = (
    "–£—Ä–æ–≤–µ–Ω—å 1 ¬∑ 5 –º–∏–Ω\n\n"
    "–î—ã—Ö–∞–Ω–∏–µ ‚Äî 1 –º–∏–Ω\n"
    "‚Ä¢ –í–¥–æ—Ö 4 ‚Äî –ø–∞—É–∑–∞ 2 ‚Äî –≤—ã–¥–æ—Ö 6 —á–µ—Ä–µ–∑ ¬´—Å¬ª.\n\n"
    "–†–æ—Ç-—è–∑—ã–∫-—â–µ–ª—á–∫–∏ ‚Äî 2 –º–∏–Ω\n"
    "‚Ä¢ –¢—Ä–µ–ª—å –≥—É–±/—è–∑—ã–∫–∞ –ø–æ 20‚Äì30 —Å–µ–∫; 10 —â–µ–ª—á–∫–æ–≤ —è–∑—ã–∫–æ–º.\n\n"
    "–ê—Ä—Ç–∏–∫—É–ª—è—Ü–∏—è ‚Äî 2 –º–∏–Ω\n"
    "‚Ä¢ ¬´–®–ª–∞ –°–∞—à–∞ –ø–æ —à–æ—Å—Å–µ‚Ä¶¬ª –æ—Ç –º–µ–¥–ª–µ–Ω–Ω–æ –∫ –±—ã—Å—Ç—Ä–æ, —Å –ø–∞—É–∑–∞–º–∏.\n\n"
    "–ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—à—å ‚Äî –∂–º–∏ ¬´‚úÖ –í—ã–ø–æ–ª–Ω–∏–ª(–∞)¬ª."
)
L2_TEXT = (
    "–£—Ä–æ–≤–µ–Ω—å 2 ¬∑ 10 –º–∏–Ω\n\n"
    "–î—ã—Ö–∞–Ω–∏–µ —Å –æ–ø–æ—Ä–æ–π ‚Äî 3 –º–∏–Ω\n"
    "‚Ä¢ –í–¥–æ—Ö –≤ –±–æ–∫–∞, –≤—ã–¥–æ—Ö –Ω–∞ ¬´—Ñ/—Å¬ª, —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ.\n\n"
    "–†–µ–∑–æ–Ω–∞—Ç–æ—Ä—ã (–º-–Ω-–∑) ‚Äî 3 –º–∏–Ω\n"
    "‚Ä¢ ¬´–º¬ª –ø–æ 3‚Äì5 –Ω–æ—Ç, –æ—â—É—â–µ–Ω–∏–µ –≤–∏–±—Ä–∞—Ü–∏–∏.\n\n"
    "–¢–µ–∫—Å—Ç-—Ä–∏—Ç–º ‚Äî 4 –º–∏–Ω\n"
    "‚Ä¢ –ü—Ä–æ—á–∏—Ç–∞–π –∞–±–∑–∞—Ü: —Ä–æ–≤–Ω–æ ‚Üí —Å –ø–∞—É–∑–∞–º–∏ ¬´3-2-1¬ª ‚Üí —Å –∞–∫—Ü–µ–Ω—Ç–∞–º–∏.\n\n"
    "–ì–æ—Ç–æ–≤? –ù–∞–∂–º–∏ ¬´‚úÖ –í—ã–ø–æ–ª–Ω–∏–ª(–∞)¬ª."
)
L3_TEXT = (
    "–£—Ä–æ–≤–µ–Ω—å 3 ¬∑ 15 –º–∏–Ω (–ü—Ä–æ)\n\n"
    "–†–µ–∑–æ–Ω–∞—Ç–æ—Ä—ã ‚Äî 5 –º–∏–Ω\n"
    "‚Ä¢ ¬´–º-–Ω-–Ω–≥¬ª –ø–æ –Ω–∏—Å—Ö–æ–¥—è—â–µ–π; 3 —Å–µ—Ä–∏–∏ ¬´–±–∏-–±–µ-–±–∞-–±–æ-–±—É¬ª.\n\n"
    "–¢–µ–∫—Å—Ç —Å –ø–∞—É–∑–∞–º–∏ ‚Äî 5 –º–∏–Ω\n"
    "‚Ä¢ 6‚Äì8 —Ñ—Ä–∞–∑ —Å–æ —Å—Ö–µ–º–æ–π –ø–∞—É–∑ 2|1|3|1|2|3.\n\n"
    "–ú–∏–∫—Ä–æ-—ç—Ç—é–¥ ‚Äî 5 –º–∏–Ω\n"
    "‚Ä¢ –¢–µ–∑–∏—Å ‚Üí –º–∏–Ω–∏-–∏—Å—Ç–æ—Ä–∏—è 20‚Äì30 —Å–µ–∫ ‚Üí –≤—ã–≤–æ–¥.\n\n"
    "–ö–∞–∫ –∑–∞–∫–æ–Ω—á–∏—à—å ‚Äî ¬´‚úÖ –í—ã–ø–æ–ª–Ω–∏–ª(–∞)¬ª."
)

async def show_training_levels(message: Message):
    await message.answer(
        "üèãÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–Ω—è\n\n–í—ã–±–µ—Ä–∏ —É—Ä–æ–≤–µ–Ω—å. –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞–∂–º–∏ ¬´‚úÖ –í—ã–ø–æ–ª–Ω–∏–ª(–∞)¬ª.",
        reply_markup=_levels_kb(),
    )

# alias –∫–∞–∫ –≤ —Å—Ç–∞—Ä–æ–º –∫–æ–¥–µ
training_entry = show_training_levels

@router.message(Command("training"))
async def cmd_training(m: Message):
    await show_training_levels(m)

@router.callback_query(F.data == "tr:l1")
async def cb_l1(cb: CallbackQuery):
    await cb.answer()
    await cb.message.answer(L1_TEXT, reply_markup=_done_kb())

@router.callback_query(F.data == "tr:l2")
async def cb_l2(cb: CallbackQuery):
    await cb.answer()
    await cb.message.answer(L2_TEXT, reply_markup=_done_kb())

@router.callback_query(F.data == "tr:l3")
async def cb_l3(cb: CallbackQuery):
    await cb.answer()
    await cb.message.answer(L3_TEXT, reply_markup=_done_kb())

@router.callback_query(F.data == "tr:done")
async def cb_done(cb: CallbackQuery):
    await cb.answer("–ó–∞—Å—á–∏—Ç–∞–Ω–æ!")
    # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ: –ª–æ–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ (–µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –µ—Å—Ç—å)
    try:
        from app.storage.repo_extras import log_progress_event
        await log_progress_event(cb.from_user.id, kind="training", meta=None)
    except Exception:
        pass
    from app.routers.help import show_main_menu
    await show_main_menu(cb)
