from __future__ import annotations

import logging
from aiogram import Router
from aiogram.filters import Command
from aiogram.types import (
    Message,
    ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove,
)

router = Router(name="panic")
log = logging.getLogger("panic")

def _diagnostic_kb() -> ReplyKeyboardMarkup:
    rows = [
        [KeyboardButton(text="üèãÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–Ω—è"), KeyboardButton(text="üìà –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å")],
        [KeyboardButton(text="üé≠ –ú–∏–Ω–∏-–∫–∞—Å—Ç–∏–Ω–≥"),   KeyboardButton(text="üß≠ –ü—É—Ç—å –ª–∏–¥–µ—Ä–∞")],
        [KeyboardButton(text="üí¨ –ü–æ–º–æ—â—å / FAQ"),   KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")],
        [KeyboardButton(text="üîê –ü–æ–ª–∏—Ç–∏–∫–∞"),       KeyboardButton(text="‚≠ê –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è")],
    ]
    return ReplyKeyboardMarkup(keyboard=rows, resize_keyboard=True, is_persistent=True)

@router.message(Command("ping"))
async def cmd_ping(m: Message):
    await m.answer("pong üü¢")

@router.message(Command("panicmenu"))
async def cmd_panicmenu(m: Message):
    await m.answer("–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–µ –º–µ–Ω—é:", reply_markup=_diagnostic_kb())

@router.message(Command("panicoff"))
async def cmd_panicoff(m: Message):
    await m.answer("–û–∫, –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —É–±—Ä–∞–ª.", reply_markup=ReplyKeyboardRemove())

# –ù–∏–∫–∞–∫–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –æ–±—ã—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –∑–¥–µ—Å—å –Ω–µ—Ç.
