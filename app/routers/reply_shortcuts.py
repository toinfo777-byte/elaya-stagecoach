from __future__ import annotations

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from app.keyboards.menu import (
    main_menu, small_menu,
    BTN_TO_MENU, BTN_TO_SETTINGS, BTN_WIPE,
)
from app.storage.repo import session_scope
from app.storage.models import User

router = Router(name="reply_shortcuts")


# üè† –í –º–µ–Ω—é ‚Äî –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–æ, –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–∏—á–µ–≥–æ –Ω–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–ª–æ
@router.message(F.text == BTN_TO_MENU)
@router.message(Command("menu"))
async def to_menu(m: Message, state: FSMContext) -> None:
    await state.clear()
    await m.answer("–ú–µ–Ω—é", reply_markup=main_menu())


# ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Äî —Ç–æ–∂–µ –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –ª—é–±–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
@router.message(F.text == BTN_TO_SETTINGS)
@router.message(Command("settings"))
async def to_settings(m: Message, state: FSMContext) -> None:
    await state.clear()
    await m.answer("–ù–∞—Å—Ç—Ä–æ–π–∫–∏. –ú–æ–∂–µ—à—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é.", reply_markup=small_menu())


# üóë –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å (–∏ /wipe_me)
@router.message(F.text == BTN_WIPE)
@router.message(Command("wipe_me"))
async def wipe_profile(m: Message, state: FSMContext) -> None:
    await state.clear()
    with session_scope() as s:
        # –≤–∞–∂–Ω–æ: —É–¥–∞–ª—è–µ–º –ø–æ tg_id, –∞ –Ω–µ –ø–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É PK id
        s.query(User).filter(User.tg_id ==_
