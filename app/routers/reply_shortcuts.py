from __future__ import annotations

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message

from app.keyboards.menu import (
    main_menu, small_menu,
    BTN_TO_MENU, BTN_TO_SETTINGS, BTN_WIPE,
)
from app.storage.repo import session_scope
from app.storage.models import User

router = Router(name="reply_shortcuts")

# üè† –í –º–µ–Ω—é
@router.message(F.text == BTN_TO_MENU)
async def to_menu(m: Message):
    await m.answer("–ú–µ–Ω—é", reply_markup=main_menu())

# ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏
@router.message(F.text == BTN_TO_SETTINGS)
async def to_settings(m: Message):
    await m.answer(
        "–ù–∞—Å—Ç—Ä–æ–π–∫–∏. –ú–æ–∂–µ—à—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é.",
        reply_markup=small_menu(),
    )

# üóë –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å (–∏ /wipe_me)
@router.message(F.text == BTN_WIPE)
@router.message(Command("wipe_me"))
async def wipe_profile(m: Message):
    # –í–ê–ñ–ù–û: —É–¥–∞–ª—è–µ–º –ø–æ tg_id, –∞ –Ω–µ –ø–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É users.id
    with session_scope() as s:
        s.query(User).filter(User.tg_id == m.from_user.id).delete(synchronize_session=False)
    await m.answer("–û–∫, –≤—Å—ë —Å–±—Ä–æ—Å–∏–ª. –û—Ç–∫—Ä—ã–≤–∞—é –º–µ–Ω—é.", reply_markup=main_menu())
