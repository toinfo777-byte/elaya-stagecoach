# app/routers/apply.py
from __future__ import annotations

from aiogram import Router, F
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from app.keyboards.menu import BTN_APPLY

router = Router(name="apply")

# –ú—è–≥–∫–∏–π –∏–º–ø–æ—Ä—Ç –æ–±—â–µ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è –∫–∞—Å—Ç–∏–Ω–≥–∞
try:
    from app.flows.casting_flow import start_casting_flow
except Exception:
    start_casting_flow = None


@router.message(Command("apply"), StateFilter(None))
@router.message(F.text == BTN_APPLY, StateFilter(None))
async def apply_entry(message: Message, state: FSMContext) -> None:
    """–ê–ª–∏–∞—Å: ¬´–ü—É—Ç—å –ª–∏–¥–µ—Ä–∞¬ª –≤–µ–¥—ë—Ç –≤ –º–∏–Ω–∏-–∫–∞—Å—Ç–∏–Ω–≥. 
    –ï—Å–ª–∏ flow –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–æ–ª–ª–±–µ–∫."""
    if start_casting_flow:
        return await start_casting_flow(message, state)
    await message.answer("–ó–∞—è–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ üôè")
