# app/routers/apply.py
from aiogram import Router, types
from aiogram.filters import Command
from aiogram.utils.keyboard import ReplyKeyboardBuilder

router = Router(name="apply")

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥–º–µ–Ω—é
def apply_menu() -> types.ReplyKeyboardMarkup:
    kb = ReplyKeyboardBuilder()
    kb.button(text="‚úçÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")
    kb.button(text="üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏")
    kb.button(text="üìé –í –º–µ–Ω—é")
    return kb.as_markup(resize_keyboard=True)


@router.message(Command("apply"))
@router.message(lambda m: m.text == "üß≠ –ü—É—Ç—å –ª–∏–¥–µ—Ä–∞")
async def apply_entry(message: types.Message):
    text = (
        "üß≠ <b>–ü—É—Ç—å –ª–∏–¥–µ—Ä–∞</b> ‚Äî –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏—è —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞ —Ü–µ–ª–∏.\n\n"
        "–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É ‚Äî –≤–µ—Ä–Ω—É—Å—å —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏."
    )
    await message.answer(text, reply_markup=apply_menu())


@router.message(lambda m: m.text == "‚úçÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")
async def apply_new(message: types.Message):
    await message.answer(
        "‚úçÔ∏è –ü—É—Ç—å –ª–∏–¥–µ—Ä–∞: –∫–æ—Ä–æ—Ç–∫–∞—è –∑–∞—è–≤–∫–∞.\n"
        "–ù–∞–ø–∏—à–∏—Ç–µ, —á–µ–≥–æ —Ö–æ—Ç–∏—Ç–µ –¥–æ—Å—Ç–∏—á—å ‚Äî –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º (–¥–æ 200 —Å–∏–º–≤–æ–ª–æ–≤).\n"
        "–ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ ‚Äî /cancel."
    )


@router.message(lambda m: m.text == "üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏")
async def apply_list(message: types.Message):
    # TODO: –ø–æ–¥–∫–ª—é—á–∏—Ç—å –±–∞–∑—É, –ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –∑–∞–≥–ª—É—à–∫–∞
    await message.answer("–ó–∞—è–≤–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç.")


@router.message(lambda m: m.text == "üìé –í –º–µ–Ω—é")
async def apply_back(message: types.Message):
    from app.keyboards.menu import main_menu
    await message.answer("–û–∫, –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –ù–∞–∂–º–∏ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É.", reply_markup=main_menu())
