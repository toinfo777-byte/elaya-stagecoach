from __future__ import annotations

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message

from app.routers.menu import BTN_APPLY, main_menu

router = Router(name="apply")

class ApplyForm(StatesGroup):
    text = State()

async def apply_entry(m: Message, state: FSMContext):
    """
    –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ ¬´–ü—É—Ç—å –ª–∏–¥–µ—Ä–∞¬ª. –ú–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –∏–∑ —à–æ—Ä—Ç–∫–∞—Ç–æ–≤.
    """
    await m.answer("–ü—É—Ç—å –ª–∏–¥–µ—Ä–∞: –∫–æ—Ä–æ—Ç–∫–∞—è –∑–∞—è–≤–∫–∞.\n–ù–∞–ø–∏—à–∏—Ç–µ, —á–µ–≥–æ —Ö–æ—Ç–∏—Ç–µ –¥–æ—Å—Ç–∏—á—å ‚Äî –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.", reply_markup=main_menu())
    await state.set_state(ApplyForm.text)

@router.message(Command("apply"))
async def apply_cmd(m: Message, state: FSMContext):
    await apply_entry(m, state)

@router.message(F.text == BTN_APPLY)
async def apply_btn(m: Message, state: FSMContext):
    await apply_entry(m, state)

@router.message(ApplyForm.text, ~F.text.startswith("/"))
async def apply_text(m: Message, state: FSMContext):
    # –∑–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –±–∞–∑—É; –ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º
    await state.clear()
    await m.answer("–°–ø–∞—Å–∏–±–æ! –ü—Ä–∏–Ω—è–ª. –î–≤–∏–≥–∞–µ–º—Å—è –¥–∞–ª—å—à–µ üí™", reply_markup=main_menu())

@router.message(ApplyForm.text, F.text.in_({"cancel", "/cancel"}))
async def apply_cancel(m: Message, state: FSMContext):
    await state.clear()
    await m.answer("–ê–Ω–∫–µ—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –í–æ–∑–≤—Ä–∞—â–∞—é –≤ –º–µ–Ω—é.", reply_markup=main_menu())
