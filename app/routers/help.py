# app/routers/help.py
from __future__ import annotations

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder

router = Router(name="help")


def build_main_menu():
    """
    –ï–¥–∏–Ω–∞—è inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.
    –ï—ë –±—É–¥–µ–º –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–∑ –¥—Ä—É–≥–∏—Ö —Ä–æ—É—Ç–µ—Ä–æ–≤.
    """
    kb = InlineKeyboardBuilder()
    kb.button(text="üîÅ –û–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é", callback_data="go:menu")
    kb.button(text="üõ† –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞",  callback_data="go:diag")
    kb.button(text="‚ùì –ü–æ–º–æ—â—å",       callback_data="go:help")
    kb.adjust(2, 1)
    return kb.as_markup()


async def show_main_menu(target: Message | CallbackQuery):
    """
    –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–≤–æ–¥ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç Message –∏–ª–∏ CallbackQuery, —á—Ç–æ–±—ã —É–¥–æ–±–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –∏–∑ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç.
    """
    text = (
        "–ö–æ–º–∞–Ω–¥—ã –∏ —Ä–∞–∑–¥–µ–ª—ã: –≤—ã–±–µ—Ä–∏ –Ω—É–∂–Ω–æ–µ üéØ\n\n"
        "‚Ä¢ /menu ‚Äî –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "‚Ä¢ /levels ‚Äî —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n"
        "‚Ä¢ /progress ‚Äî –º–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å\n"
        "‚Ä¢ /help ‚Äî –ø–æ–º–æ—â—å / FAQ\n"
        "‚Ä¢ /diag ‚Äî –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–±–æ—Ä–∫–∏"
    )

    reply_markup = build_main_menu()
    # –ï—Å–ª–∏ –ø—Ä–∏—à–ª–∏ –∏–∑ callback ‚Äî –æ—Ç–≤–µ—á–∞–µ–º –≤ —Ç–æ—Ç –∂–µ —á–∞—Ç
    if isinstance(target, CallbackQuery):
        # –∑–∞–∫—Ä—ã–≤–∞–µ–º –∫—Ä—É–∂–æ—á–µ–∫ ‚Äúloading‚Äù
        await target.answer()
        await target.message.answer(text, reply_markup=reply_markup)
    else:
        await target.answer(text, reply_markup=reply_markup)


@router.message(F.text.in_({"/help", "help"}))
async def cmd_help(msg: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /help ‚Äî –∫—Ä–∞—Ç–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞ + –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é."""
    help_text = (
        "üÜò <b>–ü–æ–º–æ—â—å / FAQ</b>\n\n"
        "‚Ä¢ /menu ‚Äî –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "‚Ä¢ /levels ‚Äî —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n"
        "‚Ä¢ /progress ‚Äî –≤–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å\n"
        "‚Ä¢ /ping ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∏\n"
        "‚Ä¢ /diag ‚Äî —Å–≤–µ–¥–µ–Ω–∏—è –æ –≤–µ—Ä—Å–∏–∏ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)\n\n"
        "–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ –∑–¥–µ—Å—å –∂–µ, –ø–æ—Å–º–æ—Ç—Ä–∏–º."
    )
    await msg.answer(help_text, reply_markup=build_main_menu())


@router.callback_query(F.data == "go:help")
async def go_help(cb: CallbackQuery):
    """–ö–Ω–æ–ø–∫–∞ ‚Äú–ü–æ–º–æ—â—å‚Äù –∏–∑ –º–µ–Ω—é."""
    await cmd_help(cb.message)
