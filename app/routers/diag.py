from __future__ import annotations

import os
from datetime import datetime

from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
import sentry_sdk

router = Router(name="diag")

# /version ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–∏–ª–¥, –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
@router.message(Command("version"))
async def cmd_version(msg: Message):
    release = os.getenv("SHORT_SHA", "local")
    env = os.getenv("ENV", "develop")
    # –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ (–ø—Ä–∏–º–µ—Ä–Ω–æ = –≤—Ä–µ–º–µ–Ω–∏ –±–∏–ª–¥–∞/–¥–µ–ø–ª–æ—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞)
    started_at = datetime.utcnow().strftime("%Y-%m-%d %H:%M:%S UTC")
    await msg.answer(
        "<b>Elaya ‚Äî Stagecoach | Dev</b>\n"
        f"üåø <b>Environment:</b> <code>{env}</code>\n"
        f"üèó <b>Release:</b> <code>{release}</code>\n"
        f"üï∞ <b>Started at:</b> <code>{started_at}</code>"
    )

@router.message(Command("ping"))
async def cmd_ping(msg: Message):
    await msg.answer("pong üü¢")

@router.message(Command("health"))
async def cmd_health(msg: Message):
    await msg.answer("‚úÖ Bot is alive and running!")

@router.message(Command("sentry_ping"))
async def cmd_sentry_ping(msg: Message):
    try:
        sentry_sdk.capture_message("‚úÖ sentry: hello from elaya-stagecoach")
        await msg.answer("‚úÖ –û—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ—Å—Ç-—Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Sentry")
    except Exception as e:
        await msg.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Sentry: {e}")

@router.message(Command("boom"))
async def cmd_boom(msg: Message):
    await msg.answer("üí£ Boom! –ü—Ä–æ–≤–µ—Ä—è–µ–º Sentry‚Ä¶")
    _ = 1 / 0  # –Ω–∞–º–µ—Ä–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞
