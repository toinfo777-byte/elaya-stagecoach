from aiogram import Router, F
from aiogram.types import Message
import sentry_sdk
import os

router = Router(name="diag")

ADMINS = {  # TG user_id –∞–¥–º–∏–Ω–æ–≤
    538431234,  # –ø—Ä–∏–º–µ—Ä
}

@router.message(F.text.in_({"/ping", "ping"}))
async def cmd_ping(msg: Message):
    await msg.answer("pong üü¢")

@router.message(F.text.in_({"/health", "health"}))
async def cmd_health(msg: Message):
    await msg.answer("‚úÖ Bot is alive and running!")

@router.message(F.text.in_({"/sentry_ping", "sentry_ping"}))
async def cmd_sentry_ping(msg: Message):
    # –±–æ–≥–∞—á–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç: –∫—Ç–æ/–≥–¥–µ, —Å–±–æ—Ä–∫–∞, –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    with sentry_sdk.push_scope() as scope:
        scope.set_user({"id": msg.from_user.id, "username": msg.from_user.username})
        scope.set_context("chat", {"id": msg.chat.id, "type": msg.chat.type})
        scope.set_tag("build", os.getenv("SHORT_SHA") or "local")
        scope.set_tag("env", os.getenv("ENV", "prod"))
        sentry_sdk.capture_message("‚úÖ sentry: hello from elaya-stagecoach")
    await msg.answer("‚úÖ –û—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ—Å—Ç-—Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Sentry")

@router.message(F.text.in_({"/boom", "boom"}))
async def cmd_boom(msg: Message):
    if msg.from_user.id not in ADMINS:
        await msg.answer("‚õî –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
        return
    await msg.answer("üí£ Boom! –ü—Ä–æ–≤–µ—Ä—è–µ–º Sentry‚Ä¶")
    _ = 1 / 0  # –Ω–∞–º–µ—Ä–µ–Ω–Ω—ã–π –∫—Ä—ç—à
