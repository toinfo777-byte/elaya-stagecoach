# app/routers/diag.py
from __future__ import annotations

from aiogram import Router, F
from aiogram.types import Message

from app.sentry import SENTRY_OK, capture_message, capture_exception

router = Router(name="diag")


@router.message(F.text.in_({"/ping", "ping"}))
async def cmd_ping(msg: Message):
    await msg.answer("pong üü¢")


@router.message(F.text.in_({"/health", "health"}))
async def cmd_health(msg: Message):
    await msg.answer("‚úÖ Bot is alive and running!")


@router.message(F.text.in_({"/sentry_ping", "sentry_ping"}))
async def cmd_sentry_ping(msg: Message):
    # –Ø–≤–Ω–æ —à–ª—ë–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Sentry —Å –ø–æ–ª–µ–∑–Ω—ã–º–∏ —Ç–µ–≥–∞–º–∏.
    capture_message(
        "‚úÖ sentry: hello from elaya-stagecoach",
        tags={
            "route": "/sentry_ping",
            "chat_id": msg.chat.id,
            "user_id": msg.from_user.id if msg.from_user else "unknown",
        },
    )
    if SENTRY_OK:
        await msg.answer("‚úÖ –û—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ—Å—Ç-—Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Sentry")
    else:
        await msg.answer("‚ö†Ô∏è Sentry —Å–µ–π—á–∞—Å –≤—ã–∫–ª—é—á–µ–Ω (–Ω–µ—Ç DSN)")


@router.message(F.text.in_({"/boom", "boom"}))
async def cmd_boom(msg: Message):
    await msg.answer("üí£ Boom! –ü—Ä–æ–≤–µ—Ä—è–µ–º Sentry‚Ä¶")
    try:
        _ = 1 / 0  # –Ω–∞–º–µ—Ä–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞
    except Exception as e:
        # –Ø–≤–Ω–æ —Ä–µ–ø–æ—Ä—Ç–∏–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤ Sentry —Å —Ç–µ–≥–∞–º–∏ –∏ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞–ª—å—à–µ,
        # —á—Ç–æ–±—ã –Ω–µ —Å–∫—Ä—ã–≤–∞—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ.
        capture_exception(
            e,
            tags={
                "route": "/boom",
                "chat_id": msg.chat.id,
                "user_id": msg.from_user.id if msg.from_user else "unknown",
            },
        )
        # –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞—Ç—å –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ; –æ—Å—Ç–∞–≤–∏–º –ª–æ–≥–∏–∫–æ–π soft-fail
        # raise
