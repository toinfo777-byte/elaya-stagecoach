# app/main.py
from __future__ import annotations

import asyncio
import logging

from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.types import BotCommand

from app.config import settings
from app.storage.repo import ensure_schema

# ‚¨áÔ∏è –†–û–£–¢–ï–†–´
from app.routers import (
    start as r_start,
    common as r_common_guard,
    help as r_help,
    privacy as r_privacy,
    progress as r_progress,
    settings as r_settings,
    extended as r_extended,
    training as r_training,
    entrypoints as r_entrypoints,
    casting as r_casting,
    apply as r_apply,
    leader as r_leader,
)

# ‚úÖ –Ω–æ–≤—ã–π –∏–º–ø–æ—Ä—Ç –º–∏–Ω–∏-–∫–∞—Å—Ç–∏–Ω–≥–∞ ‚Äî –∏–º–µ–Ω–Ω–æ mc_router
from app.routers.minicasting import mc_router

logging.basicConfig(level=logging.INFO)
log = logging.getLogger("main")


async def _set_commands(bot: Bot) -> None:
    cmds = [
        BotCommand(command="start", description="–ó–∞–ø—É—Å–∫ / –æ–Ω–±–æ—Ä–¥–∏–Ω–≥"),
        BotCommand(command="menu", description="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
        BotCommand(command="training", description="–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–Ω—è"),
        BotCommand(command="casting", description="–ú–∏–Ω–∏-–∫–∞—Å—Ç–∏–Ω–≥"),
        BotCommand(command="progress", description="–ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å"),
        BotCommand(command="apply", description="–ü—É—Ç—å –ª–∏–¥–µ—Ä–∞"),
        BotCommand(command="privacy", description="–ü–æ–ª–∏—Ç–∏–∫–∞"),
        BotCommand(command="extended", description="–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è"),
        BotCommand(command="help", description="–ü–æ–º–æ—â—å"),
        BotCommand(command="settings", description="–ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
        BotCommand(command="cancel", description="–°–±—Ä–æ—Å–∏—Ç—å —Ñ–æ—Ä–º—É"),
    ]
    await bot.set_my_commands(cmds)


async def main() -> None:
    # 1) —Å—Ö–µ–º–∞ –ë–î
    await ensure_schema()

    # 2) –±–æ—Ç/DP
    bot = Bot(
        token=settings.bot_token,
        default=DefaultBotProperties(parse_mode=ParseMode.HTML),
    )
    dp = Dispatcher()

    # 3) —Å—Ä–µ–∑–∞—Ç—å webhook –∏ –≤–∏—Å—è—á–∏–µ –∞–ø–¥–µ–π—Ç—ã (–∞–Ω—Ç–∏-–∫–æ–Ω—Ñ–ª–∏–∫—Ç polling)
    await bot.delete_webhook(drop_pending_updates=True)

    # 4) –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤ (–ø–æ—Ä—è–¥–æ–∫ –≤–∞–∂–µ–Ω)
    # —Å—Ç–∞—Ä—Ç/–¥–∏–ø–ª–∏–Ω–∫–∏/–∫–Ω–æ–ø–∫–∏ reply
    dp.include_router(r_start.router)
    dp.include_router(r_entrypoints.router)  # —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

    # FSM-—Å—Ü–µ–Ω–∞—Ä–∏–∏ –ü–ï–†–ï–î common
    dp.include_router(mc_router)            # üé≠ –ú–∏–Ω–∏-–∫–∞—Å—Ç–∏–Ω–≥ (–Ω–æ–≤—ã–π —Ä–æ—É—Ç–µ—Ä)
    dp.include_router(r_leader.router)      # üß≠ –ü—É—Ç—å –ª–∏–¥–µ—Ä–∞

    # –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ –≥–≤–∞—Ä–¥
    dp.include_router(r_common_guard.router)
    dp.include_router(r_help.router)
    dp.include_router(r_privacy.router)
    dp.include_router(r_progress.router)
    dp.include_router(r_settings.router)
    dp.include_router(r_extended.router)

    # –ø—Ä–æ—á–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
    dp.include_router(r_training.router)
    dp.include_router(r_casting.router)
    dp.include_router(r_apply.router)

    # 5) –∫–æ–º–∞–Ω–¥—ã
    await _set_commands(bot)
    log.info("‚úÖ –ö–æ–º–∞–Ω–¥—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

    # 6) polling
    log.info("üöÄ Start polling‚Ä¶")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
