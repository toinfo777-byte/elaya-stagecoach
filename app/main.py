from __future__ import annotations

import asyncio
import logging

from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode

from app.config import settings
from app.storage.repo import ensure_schema
from app.utils.import_routers import import_and_collect_routers  # –µ—Å–ª–∏ –µ—Å—Ç—å —É —Ç–µ–±—è —Ö–µ–ª–ø–µ—Ä; –∏–Ω–∞—á–µ –ø–æ–¥–∫–ª—é—á–∞–π –≤—Ä—É—á–Ω—É—é

logging.basicConfig(level=logging.INFO)
log = logging.getLogger("main")


async def main() -> None:
    # –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —Å—Ö–µ–º—É –ë–î
    ensure_schema()

    # aiogram 3.7+: parse_mode —á–µ—Ä–µ–∑ DefaultBotProperties
    bot = Bot(
        token=settings.bot_token,
        default=DefaultBotProperties(parse_mode=ParseMode.HTML),
    )
    dp = Dispatcher()

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã (–∏–ª–∏ –ø–æ–¥–∫–ª—é—á–∏ –≤—Ä—É—á–Ω—É—é)
    for r in import_and_collect_routers():
        dp.include_router(r)
        log.info("‚úÖ Router '%s' –ø–æ–¥–∫–ª—é—á—ë–Ω", r.name)

    log.info("‚úÖ –ö–æ–º–∞–Ω–¥—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    log.info("üöÄ Start polling‚Ä¶")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
