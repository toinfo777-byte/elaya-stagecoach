from __future__ import annotations
import asyncio, os, html
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message
from app.control.admin import require_admin, NotAdminError
from app.control.utils import status_block
from app.control.notifier import notify_admins

router = Router(name="control")

# /status ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –±–∞–∑–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
@router.message(Command("status"))
async def cmd_status(m: Message):
    await m.answer(f"üìä <b>Status</b>\n{status_block()}")

# /reload ‚Äî –º—è–≥–∫–∏–π —Ä–µ—Å—Ç–∞—Ä—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞ (Render —Å–∞–º –ø–æ–¥–Ω–∏–º–µ—Ç –∑–∞–Ω–æ–≤–æ)
@router.message(Command("reload"))
async def cmd_reload(m: Message):
    try:
        require_admin(m.from_user.id if m.from_user else None)
    except NotAdminError:
        return await m.answer("‚õî –ö–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤.")
    await m.answer("‚ôªÔ∏è –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é—Å—å‚Ä¶")
    # –¥–∞—ë–º Telegram –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç, –∑–∞—Ç–µ–º –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
    async def _exit_later():
        await asyncio.sleep(0.7)
        raise SystemExit(0)
    asyncio.create_task(_exit_later())

# /notify_admins <—Ç–µ–∫—Å—Ç> ‚Äî —Ä—É—á–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
@router.message(Command("notify_admins"))
async def cmd_notify_admins(m: Message):
    try:
        require_admin(m.from_user.id if m.from_user else None)
    except NotAdminError:
        return await m.answer("‚õî –ö–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤.")

    # —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã
    raw = (m.text or "").split(maxsplit=1)
    payload = raw[1].strip() if len(raw) > 1 else ""
    if not payload:
        payload = "üîî –†—É—á–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."

    # –¥–æ–ø–æ–ª–Ω–∏–º —Å—Ç–∞—Ç—É—Å–æ–º —Å–±–æ—Ä–∫–∏/–æ–∫—Ä—É–∂–µ–Ω–∏—è
    body = f"{html.escape(payload)}\n\n‚Äî\n{status_block()}"

    delivered = await notify_admins(m.bot, body)
    if delivered == 0:
        return await m.answer("‚ö†Ô∏è –ù–µ–∫–æ–º—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å: –ø—Ä–æ–≤–µ—Ä—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ADMIN_IDS / ADMIN_ALERT_CHAT_ID.")
    await m.answer(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ({delivered})")
