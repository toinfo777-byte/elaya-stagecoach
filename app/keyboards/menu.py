# app/keyboards/menu.py
from __future__ import annotations

from aiogram.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    BotCommand,
)

# –¢–µ–∫—Å—Ç—ã –∫–Ω–æ–ø–æ–∫ (–æ—Å–Ω–æ–≤–Ω—ã–µ)
BTN_TRAINING   = "üéØ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–Ω—è"
BTN_PROGRESS   = "üìà –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å"
BTN_LEADER     = "üß≠ –ü—É—Ç—å –ª–∏–¥–µ—Ä–∞"
BTN_CASTING    = "üé≠ –ú–∏–Ω–∏-–∫–∞—Å—Ç–∏–Ω–≥"
BTN_POLICY     = "üîê –ü–æ–ª–∏—Ç–∏–∫–∞"
BTN_HELP       = "üí¨ –ü–æ–º–æ—â—å"
BTN_SETTINGS   = "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"
BTN_PREMIUM    = "‚≠ê –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è"

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è / —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ
BTN_MENU       = "–ú–µ–Ω—é"
BTN_APPLY      = BTN_LEADER
BTN_EXTENDED   = BTN_PREMIUM

# –®–æ—Ä—Ç–∫–∞—Ç—ã (–º–∞–ª–µ–Ω—å–∫–æ–µ –º–µ–Ω—é)
BTN_TO_MENU     = "üè† –í –º–µ–Ω—é"
BTN_TO_SETTINGS = "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"
BTN_WIPE        = "üóë –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"


# === Reply Keyboards ===========================================================

def main_menu() -> ReplyKeyboardMarkup:
    """
    –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é ‚Äî 4 —Å—Ç—Ä–æ–∫–∏ –ø–æ 2 –∫–Ω–æ–ø–∫–∏ (–∫–∞–∫ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞—Ö).
    """
    rows = [
        [KeyboardButton(text=BTN_TRAINING), KeyboardButton(text=BTN_PROGRESS)],
        [KeyboardButton(text=BTN_LEADER),   KeyboardButton(text=BTN_CASTING)],
        [KeyboardButton(text=BTN_POLICY),   KeyboardButton(text=BTN_HELP)],
        [KeyboardButton(text=BTN_SETTINGS), KeyboardButton(text=BTN_PREMIUM)],
    ]
    return ReplyKeyboardMarkup(keyboard=rows, resize_keyboard=True)


def small_menu() -> ReplyKeyboardMarkup:
    """
    –ú–∏–Ω–∏-–º–µ–Ω—é –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫/—É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è.
    """
    rows = [
        [KeyboardButton(text=BTN_TO_MENU)],
        [KeyboardButton(text=BTN_TO_SETTINGS)],
        [KeyboardButton(text=BTN_WIPE)],
    ]
    return ReplyKeyboardMarkup(keyboard=rows, resize_keyboard=True)


# === Inline Keyboards ==========================================================

def to_menu_inline() -> InlineKeyboardMarkup:
    """
    –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é (inline).
    """
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üè† –í –º–µ–Ω—é", callback_data="menu:open")]
    ])


# === Bot Commands =============================================================

def get_bot_commands() -> list[BotCommand]:
    # aiogram v3 ‚Äî –¢–û–õ–¨–ö–û –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã!
    return [
        BotCommand(command="start",    description="–ù–∞—á–∞—Ç—å / –æ–Ω–±–æ—Ä–¥–∏–Ω–≥"),
        BotCommand(command="menu",     description="–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é"),
        BotCommand(command="training", description="–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞"),
        BotCommand(command="casting",  description="–ú–∏–Ω–∏-–∫–∞—Å—Ç–∏–Ω–≥"),
        BotCommand(command="progress", description="–ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å"),
        BotCommand(command="apply",    description="–ü—É—Ç—å –ª–∏–¥–µ—Ä–∞ (–∑–∞—è–≤–∫–∞)"),
        BotCommand(command="privacy",  description="–ü–æ–ª–∏—Ç–∏–∫–∞"),
        BotCommand(command="help",     description="–ü–æ–º–æ—â—å"),
        BotCommand(command="settings", description="–ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
        BotCommand(command="cancel",   description="–û—Ç–º–µ–Ω–∞"),
    ]
