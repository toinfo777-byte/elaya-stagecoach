from __future__ import annotations

from datetime import datetime
from sqlalchemy.orm import Mapped, mapped_column
from sqlalchemy import Integer, BigInteger, String, DateTime, JSON, func

# Base –±–µ—Ä—ë–º –∏–∑ –º–∏–Ω–∏-–º–æ–¥—É–ª—è –ë–î
from app.storage.db import Base


# === üé≠ –ú–∏–Ω–∏-–∫–∞—Å—Ç–∏–Ω–≥ =========================================================

class CastingSession(Base):
    __tablename__ = "casting_sessions"

    id: Mapped[int] = mapped_column(Integer, primary_key=True, autoincrement=True)
    user_id: Mapped[int] = mapped_column(BigInteger, index=True, nullable=False)

    # –æ—Ç–≤–µ—Ç—ã –∞–Ω–∫–µ—Ç—ã (–î–∞/–ù–µ—Ç/–ü–∞—É–∑–∞/–¢–µ–º–±—Ä/‚Ä¶)
    answers: Mapped[list | None] = mapped_column(JSON, default=list)

    # –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 'ok' | 'pause' | 'tempo' | ‚Ä¶
    result: Mapped[str] = mapped_column(String(32), nullable=False)

    # –∏—Å—Ç–æ—á–Ω–∏–∫: 'mini' –∏ —Ç.–ø.
    source: Mapped[str | None] = mapped_column(String(32))

    # –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏ –º–∏–Ω–∏-–∫–∞—Å—Ç–∏–Ω–≥
    finished_at: Mapped[datetime] = mapped_column(
        DateTime(timezone=True), server_default=func.now(), nullable=False
    )


class Feedback(Base):
    __tablename__ = "feedback"

    id: Mapped[int] = mapped_column(Integer, primary_key=True, autoincrement=True)
    user_id: Mapped[int] = mapped_column(BigInteger, index=True, nullable=False)

    emoji: Mapped[str | None] = mapped_column(String(10))
    phrase: Mapped[str | None] = mapped_column(String(280))

    created_at: Mapped[datetime] = mapped_column(
        DateTime(timezone=True), server_default=func.now(), nullable=False
    )


# === üß≠ –ü—É—Ç—å –ª–∏–¥–µ—Ä–∞ ==========================================================

class LeaderPath(Base):
    __tablename__ = "leader_paths"

    id: Mapped[int] = mapped_column(Integer, primary_key=True, autoincrement=True)
    user_id: Mapped[int] = mapped_column(BigInteger, index=True, nullable=False)

    intent: Mapped[str] = mapped_column(String(32), nullable=False)          # voice|public|stage|other
    micro_note: Mapped[str | None] = mapped_column(String(140))
    source: Mapped[str | None] = mapped_column(String(32))

    created_at: Mapped[datetime] = mapped_column(
        DateTime(timezone=True), server_default=func.now(), nullable=False
    )


class PremiumRequest(Base):
    __tablename__ = "premium_requests"

    id: Mapped[int] = mapped_column(Integer, primary_key=True, autoincrement=True)
    user_id: Mapped[int] = mapped_column(BigInteger, index=True, nullable=False)

    # intent –æ—Å—Ç–∞–≤–∏–ª –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º ‚Äî —Ç–≤–æ–π save_premium_request –µ–≥–æ –Ω–µ –ø–µ—Ä–µ–¥–∞—ë—Ç
    intent: Mapped[str | None] = mapped_column(String(32))
    text: Mapped[str] = mapped_column(String(512))
    source: Mapped[str | None] = mapped_column(String(32))

    created_at: Mapped[datetime] = mapped_column(
        DateTime(timezone=True), server_default=func.now(), nullable=False
    )


# === üìà –ü—Ä–æ–≥—Ä–µ—Å—Å / —Å–æ–±—ã—Ç–∏—è ====================================================

class ProgressEvent(Base):
    __tablename__ = "progress_events"

    id: Mapped[int] = mapped_column(Integer, primary_key=True, autoincrement=True)
    user_id: Mapped[int] = mapped_column(BigInteger, index=True, nullable=False)

    # 'training' | 'minicasting'
    kind: Mapped[str] = mapped_column(String(32), nullable=False)

    # –¥–ª—è training: 'l1'|'l2'|'l3'; –¥–ª—è –ø—Ä–æ—á–∏—Ö ‚Äî None
    level: Mapped[str | None] = mapped_column(String(16))

    created_at: Mapped[datetime] = mapped_column(
        DateTime(timezone=True), server_default=func.now(), nullable=False
    )
