# app/bot/routers/help.py
from __future__ import annotations
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message
from app.keyboards.menu import main_menu

router = Router(name="help")

def _is_help(text: str) -> bool:
    if not text:
        return False
    t = text.strip().lower()
    # —É–±–∏—Ä–∞–µ–º —á–∞—Å—Ç—ã–µ —ç–º–æ–¥–∑–∏ –ø–µ—Ä–µ–¥ —Å–ª–æ–≤–æ–º
    for prefix in ("üí¨", "‚ùì", "üÜò", "üó®Ô∏è"):
        if t.startswith(prefix.lower()):
            t = t[len(prefix):].strip()
    return "–ø–æ–º–æ—â" in t  # –ø–æ–∫—Ä—ã–≤–∞–µ—Ç –ø–æ–º–æ—â—å/–ø–æ–º–æ—â—å/–ø–æ–º–æ—â–Ω–∏–∫–∏ –∏ —Ç.–ø.

@router.message(Command("help"))
@router.message(F.text.func(lambda s: _is_help(s or "")))
async def help_entry(message: Message) -> None:
    text = (
        "üÜò <b>–ü–æ–º–æ—â—å</b>\n\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/start ‚Äî –ù–∞—á–∞—Ç—å / –æ–Ω–±–æ—Ä–¥–∏–Ω–≥\n"
        "/menu ‚Äî –û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é\n"
        "/training ‚Äî –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–Ω—è\n"
        "/progress ‚Äî –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å\n"
        "/apply ‚Äî –ü—É—Ç—å –ª–∏–¥–µ—Ä–∞ (–∑–∞—è–≤–∫–∞)\n"
        "/casting ‚Äî –ú–∏–Ω–∏-–∫–∞—Å—Ç–∏–Ω–≥\n"
        "/privacy ‚Äî –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏\n"
        "/help ‚Äî –ü–æ–º–æ—â—å\n"
        "/premium ‚Äî –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è\n"
        "/settings ‚Äî –ù–∞—Å—Ç—Ä–æ–π–∫–∏"
    )
    await message.answer(text, reply_markup=main_menu())
