# app/bot/routers/premium.py
from __future__ import annotations

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove

from app.keyboards.menu import main_menu, BTN_PREMIUM

router = Router(name="premium")

# –õ–æ–∫–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–∞–∑–¥–µ–ª–∞ (–¥–ª—è —à–∞–≥–∞ –≤–Ω—É—Ç—Ä–∏ premium)
def _premium_kb() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üîé –ß—Ç–æ –≤–Ω—É—Ç—Ä–∏?")],
            [KeyboardButton(text="üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")],
            [KeyboardButton(text="üß≠ –í –º–µ–Ω—é")],
        ],
        resize_keyboard=True,
        one_time_keyboard=False,
    )

@router.message(Command("premium"))
@router.message(F.text == BTN_PREMIUM)
async def premium_entry(message: Message) -> None:
    text = (
        "<b>‚≠êÔ∏è –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è</b>\n\n"
        "‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Ä–∞–∑–±–æ—Ä –∏ –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å\n"
        "‚Ä¢ –†–∞–∑–æ–≥—Ä–µ–≤ –≥–æ–ª–æ—Å–∞, –¥–∏–∫—Ü–∏–∏ –∏ –≤–Ω–∏–º–∞–Ω–∏—è\n"
        "‚Ä¢ –ú–∏–Ω–∏-–∫–∞—Å—Ç–∏–Ω–≥ –∏ ¬´–ø—É—Ç—å –ª–∏–¥–µ—Ä–∞¬ª\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )
    await message.answer(text, reply_markup=_premium_kb())

@router.message(F.text == "üîé –ß—Ç–æ –≤–Ω—É—Ç—Ä–∏?")
async def premium_inside(message: Message) -> None:
    await message.answer(
        "–í–Ω—É—Ç—Ä–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ ‚Äî –±–æ–ª—å—à–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–∞–∑–±–æ—Ä–æ–≤.",
        reply_markup=_premium_kb(),
    )

@router.message(F.text == "üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")
async def premium_ask_goal(message: Message) -> None:
    await message.answer(
        "–ù–∞–ø–∏—à–∏—Ç–µ —Ü–µ–ª—å –æ–¥–Ω–æ–π –∫–æ—Ä–æ—Ç–∫–æ–π —Ñ—Ä–∞–∑–æ–π (–¥–æ 200 —Å–∏–º–≤–æ–ª–æ–≤). "
        "–ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ ‚Äî –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel.",
        reply_markup=ReplyKeyboardRemove(),
    )

@router.message(F.text == "üß≠ –í –º–µ–Ω—é")
async def premium_back_to_menu(message: Message) -> None:
    await message.answer("–û–∫, –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –ù–∞–∂–º–∏ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É.", reply_markup=main_menu())

# –ü—Ä–∏—à—ë–ª —Å–≤–æ–±–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç ‚Äî —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ –∑–∞—è–≤–∫–æ–π (–µ—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –≤ –ø—Ä–µ–º–∏—É–º–µ)
@router.message(F.text.func(lambda t: t not in {BTN_PREMIUM, "üîé –ß—Ç–æ –≤–Ω—É—Ç—Ä–∏?", "üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", "üß≠ –í –º–µ–Ω—é"}))
async def premium_save_goal(message: Message) -> None:
    # –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –∑–∞—è–≤–∫—É –≤ –ë–î
    await message.answer("–°–ø–∞—Å–∏–±–æ! –ü—Ä–∏–Ω—è–ª. –î–≤–∏–≥–∞–µ–º—Å—è –¥–∞–ª—å—à–µ üëç", reply_markup=main_menu())
