from __future__ import annotations

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton

from app.keyboards.menu import main_menu, BTN_CASTING

router = Router(name="casting")

def _quiz_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–§–∞–∫—Ç", callback_data="cast:fact")],
        [InlineKeyboardButton(text="–ú–∞–Ω–∏–ø—É–ª—è—Ü–∏—è", callback_data="cast:manip")],
    ])

@router.message(Command("casting"))
@router.message(F.text == BTN_CASTING)
async def casting_entry(message: Message) -> None:
    await message.answer("üé≠ –ú–∏–Ω–∏-–∫–∞—Å—Ç–∏–Ω–≥", reply_markup=main_menu())
    await message.answer(
        "–í–æ–ø—Ä–æ—Å 1/10:\n–í—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ —Ñ–∞–∫—Ç –∏–ª–∏ –Ω–∞ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏—é?",
        reply_markup=_quiz_keyboard(),
    )

from aiogram.types import CallbackQuery

@router.callback_query(F.data.startswith("cast:"))
async def casting_answer(cb: CallbackQuery) -> None:
    await cb.answer("–û—Ç–≤–µ—Ç –ø—Ä–∏–Ω—è—Ç")
    await cb.message.edit_reply_markup()  # —É–±—Ä–∞–ª–∏ –∫–Ω–æ–ø–∫–∏ –Ω–∞ —ç—Ç–æ–º –≤–æ–ø—Ä–æ—Å–µ
    # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ ‚Äì –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
