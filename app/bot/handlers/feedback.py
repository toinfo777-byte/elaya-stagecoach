# app/bot/handlers/feedback.py
from __future__ import annotations
from aiogram import Router, F
from aiogram.filters import StateFilter
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

from app.routers.menu import main_menu

router = Router(name="feedback2")

EMOJI_FIRE = "üî•"
EMOJI_OK = "üëå"
EMOJI_MEH = "üòê"
BTN_PHRASE = "‚úç 1 —Ñ—Ä–∞–∑–∞"

class FeedbackStates(StatesGroup):
    wait_phrase = State()

# —Ç–æ—á–Ω—ã–µ –º–∞—Ç—á–∏ –ø–æ –∫–Ω–æ–ø–∫–∞–º-—ç–º–æ–¥–∑–∏
@router.message(StateFilter("*"), F.text == EMOJI_FIRE)
async def fb_fire(m: Message):
    await m.answer("üî• –°—É–ø–µ—Ä! –°–ø–∞—Å–∏–±–æ üôå", reply_markup=main_menu())

@router.message(StateFilter("*"), F.text == EMOJI_OK)
async def fb_ok(m: Message):
    await m.answer("üëå –ü—Ä–∏–Ω—è–ª. –°–ø–∞—Å–∏–±–æ!", reply_markup=main_menu())

@router.message(StateFilter("*"), F.text == EMOJI_MEH)
async def fb_meh(m: Message):
    await m.answer("üòê –ü—Ä–∏–Ω—è–ª. –°–ø–∞—Å–∏–±–æ!", reply_markup=main_menu())

# –ø–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º ¬´–∫–æ—Ä–æ—Ç–∫–∞—è —Ñ—Ä–∞–∑–∞¬ª
@router.message(StateFilter("*"), F.text == BTN_PHRASE)
async def fb_phrase_start(m: Message, state: FSMContext):
    await state.set_state(FeedbackStates.wait_phrase)
    await m.answer("–ù–∞–ø–∏—à–∏—Ç–µ –æ–¥–Ω—É –∫–æ—Ä–æ—Ç–∫—É—é —Ñ—Ä–∞–∑—É –æ–± —ç—Ç–æ–º —ç—Ç—é–¥–µ. –ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ ‚Äî –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel.", reply_markup=main_menu())

# –ø—Ä–∏—ë–º —Ñ—Ä–∞–∑—ã
@router.message(FeedbackStates.wait_phrase, ~F.text.startswith("/"))
async def fb_phrase_save(m: Message, state: FSMContext):
    text = (m.text or "").strip()
    if not text:
        await m.answer("–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–º –æ–¥–Ω—É –∫–æ—Ä–æ—Ç–∫—É—é —Ñ—Ä–∞–∑—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.", reply_markup=main_menu())
        return
    # –∑–¥–µ—Å—å –º–æ–∂–µ—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ—Ä–∞–∑—É –≤ –ë–î
    await state.clear()
    await m.answer("–°–ø–∞—Å–∏–±–æ! –ü—Ä–∏–Ω—è–ª ‚úç", reply_markup=main_menu())
