# app/bot/handlers/feedback.py
from aiogram import Router, F
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

from app.bot.states import Feedback
from app.bot.keyboards.feedback import rating_kb, skip_kb
from app.bot.keyboards.main_menu import main_menu_kb  # –µ—Å–ª–∏ –µ—Å—Ç—å —Å–≤–æ–π ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π –µ–≥–æ –∏–º–ø–æ—Ä—Ç

# —Ç–≤–æ–∏ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å –ë–î (–∏–∑ —Ç–æ–≥–æ —Ñ–∞–π–ª–∞, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø—Ä–∏—Å–ª–∞–ª)
from app.storage.db import session_scope, log_event

router = Router()

# –í–´–ó–û–í –°–ü–†–û–°–ò–¢–¨ –û–¢–ó–´–í ‚Äî –ø–æ–¥—Å—Ç–∞–≤—å —Å–≤–æ–π —Ç—Ä–∏–≥–≥–µ—Ä/–º–µ—Å—Ç–æ, –≥–¥–µ —ç—Ç–æ —É–º–µ—Å—Ç–Ω–æ
@router.message(F.text == "/ask_review")
async def ask_review(msg: Message, state: FSMContext):
    await state.set_state(Feedback.WaitRating)
    await msg.answer(
        "–ö–∞–∫ –ø—Ä–æ—à—ë–ª —ç—Ç—é–¥? –û—Ü–µ–Ω–∏—Ç–µ –∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –∫—Ä–∞—Ç–∫–∏–π –æ—Ç–∑—ã–≤:",
        reply_markup=rating_kb()
    )

# –ü–û–õ–£–ß–ê–ï–ú –û–¶–ï–ù–ö–£ (–∫–Ω–æ–ø–∫–∏ üî•/üëå/üòê –∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Ç–µ–∫—Å—Ç—É)
@router.callback_query(F.data.startswith("rate:"), Feedback.WaitRating)
async def on_rating(cb: CallbackQuery, state: FSMContext):
    action = cb.data.split(":", 1)[1]
    tg_id = cb.from_user.id

    if action == "text":
        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞
        await state.set_state(Feedback.WaitText)
        # —É–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–µ inline-–∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã –Ω–µ –Ω–∞–∂–∏–º–∞–ª–∏ –≤—Ç–æ—Ä–æ–π —Ä–∞–∑
        await cb.message.edit_reply_markup(reply_markup=None)
        await cb.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ 1 —Ñ—Ä–∞–∑—É –æ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–∏:", reply_markup=skip_kb())
        await cb.answer()
        return

    # –û—Ü–µ–Ω–∫–∏ –∏ ¬´–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å¬ª —Å —à–∞–≥–∞ WaitRating
    rating = {"hot": "üî•", "ok": "üëå", "meh": "üòê", "skip": "skip"}.get(action, "skip")

    # –õ–æ–≥–∏—Ä—É–µ–º, –Ω–æ –Ω–µ –ª–æ–º–∞–µ–º –ø–æ—Ç–æ–∫, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–π–¥—ë—Ç –Ω–µ —Ç–∞–∫
    try:
        with session_scope() as s:
            log_event(s, user_id=None, name="rating", payload={"tg_id": tg_id, "rating": rating})
    except Exception:
        pass

    await cb.message.edit_reply_markup(reply_markup=None)
    await cb.answer("–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ")
    await state.clear()
    await cb.message.answer("–°–ø–∞—Å–∏–±–æ! –ß—Ç–æ –¥–∞–ª—å—à–µ?", reply_markup=main_menu_kb())

# –¢–ï–ö–°–¢–û–í–´–ô –û–¢–ó–´–í
@router.message(Feedback.WaitText)
async def on_text_review(msg: Message, state: FSMContext):
    tg_id = msg.from_user.id
    text = (msg.text or "").strip()

    if text:
        try:
            with session_scope() as s:
                log_event(s, user_id=None, name="review_text", payload={"tg_id": tg_id, "text": text})
        except Exception:
            pass

    await state.clear()
    await msg.answer("–°–ø–∞—Å–∏–±–æ! –£—á—Ç–µ–Ω–æ ‚úÖ", reply_markup=main_menu_kb())

# ¬´–ü–†–û–ü–£–°–¢–ò–¢–¨¬ª –Ω–∞ —à–∞–≥–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ—Ç–∑—ã–≤–∞
@router.callback_query(F.data == "rate:skip", Feedback.WaitText)
async def on_skip_text(cb: CallbackQuery, state: FSMContext):
    await cb.answer("–ü—Ä–æ–ø—É—â–µ–Ω–æ")
    await state.clear()
    await cb.message.edit_reply_markup(reply_markup=None)
    await cb.message.answer("–°–ø–∞—Å–∏–±–æ! –ß—Ç–æ –¥–∞–ª—å—à–µ?", reply_markup=main_menu_kb())

# –ú–ï–ù–Æ –î–û–õ–ñ–ù–û –†–ê–ë–û–¢–ê–¢–¨ –ò–ó –õ–Æ–ë–û–ì–û –°–û–°–¢–û–Ø–ù–ò–Ø ‚Äî –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
@router.message(
    StateFilter("*"),
    F.text.in_({"üèãÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–Ω—è", "üìà –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å", "üß≠ –ü—É—Ç—å –ª–∏–¥–µ—Ä–∞", "üé≠ –ú–∏–Ω–∏-–∫–∞—Å—Ç–∏–Ω–≥", "üó£ –ü–æ–º–æ—â—å"})
)
async def menu_any_state(msg: Message, state: FSMContext):
    # —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∑–∞–≤–∏—Å—à–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()
    # –∑–¥–µ—Å—å —Å–¥–µ–ª–∞–π –ø–µ—Ä–µ—Ö–æ–¥—ã –Ω–∞ —Å–≤–æ–∏ —Å—Ü–µ–Ω–∞—Ä–∏–∏; –±–∞–∑–æ–≤–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
    await msg.answer("–ì–æ—Ç–æ–≤–æ. –í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.", reply_markup=main_menu_kb())
