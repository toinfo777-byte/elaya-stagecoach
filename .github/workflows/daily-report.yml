name: Daily status report

on:
  schedule:
    # 06:00 UTC = 09:00 MSK
    - cron: "0 6 * * *"
  workflow_dispatch:

permissions:
  contents: write   # пушим md в docs/
  packages: read

jobs:
  report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build markdown
        shell: bash
        run: |
          set -eux
          mkdir -p docs/elaya_status
          TS="$(date -u +'%Y-%m-%d %H:%M:%SZ')"
          DATE="$(date -u +'%Y%m%d')"
          FILE="docs/elaya_status/Elaya_Status_${DATE}.md"
          {
            echo "# Ежедневный отчёт"
            echo "- Time (UTC): ${TS}"
            echo "- Branch: ${{ github.ref_name }}"
            echo "- Commit: ${{ github.sha }}"
            echo "- Runner: ${{ github.run_id }}"
            echo
            echo "## Пульс"
            echo "- ENV: develop"
            echo "- Source: GitHub Actions"
            echo "- Notes: Автогенерация."
          } > "${FILE}"
          echo "OUT_FILE=${FILE}" >> "$GITHUB_ENV"

      - name: Commit & push
        shell: bash
        run: |
          set -eux
          git config user.name "elaya-bot"
          git config user.email "actions@users.noreply.github.com"
          git add "${{ env.OUT_FILE }}"
          git commit -m "Daily: $(basename "${{ env.OUT_FILE }}")" || exit 0
          git push

      - name: Send Telegram notify
        if: ${{ secrets.TG_BOT_TOKEN != '' && secrets.TG_REPORT_CHAT_ID != '' }}
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_REPORT_CHAT_ID }}
        shell: bash
        run: |
          set -eu
          FILE_URL="https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/main/${{ env.OUT_FILE }}"
          TEXT=$(printf "🧾 Ежедневный отчёт\n• ENV: develop\n• Branch: %s\n• SHA: %.7s\n• File: %s" "${GITHUB_REF_NAME}" "${GITHUB_SHA}" "${FILE_URL}")
          curl -sS -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage" \
            -d chat_id="${TG_CHAT_ID}" \
            --data-urlencode text="${TEXT}" \
            -d disable_web_page_preview=true
