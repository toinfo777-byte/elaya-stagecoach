name: Daily status report

on:
  schedule:
    # 06:00 UTC = 09:00 MSK
    - cron: "0 6 * * *"
  workflow_dispatch:

permissions:
  contents: write       # нужно, чтобы пушить файл
  packages: read

jobs:
  report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Build markdown
        id: build
        run: |
          set -e
          mkdir -p docs/elaya_status
          TS="$(date -u +'%Y-%m-%d %H:%M:%SZ')"
          DATE="$(date -u +'%Y%m%d')"
          OUT="docs/elaya_status/Elaya_Status_${DATE}.md"

          cat > "${OUT}" <<'MD'
          # Ежедневный отчёт
          - Time (UTC): ${TS}
          - Branch: $GITHUB_REF_NAME
          - Commit: $GITHUB_SHA
          - Runner: $GITHUB_RUN_ID

          ## Пульс
          - ENV: develop
          - Source: GitHub Actions
          - Notes: Автогенерация.
          MD

          # подставим реальное время
          sed -i "s|\${TS}|${TS}|g" "${OUT}"

          echo "OUT=${OUT}" >> "$GITHUB_OUTPUT"

      - name: Commit report file
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(report): daily status [skip ci]"
          branch: main
          file_pattern: docs/elaya_status/*.md

      # --- (опционально) PDF из md ---
      - name: Install pandoc
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc

      - name: Build PDF
        run: |
          TODAY="$(date -u +'%Y%m%d')"
          IN="docs/elaya_status/Elaya_Status_${TODAY}.md"
          OUT="docs/elaya_status/Elaya_Status_${TODAY}.pdf"
          [ -f "$IN" ] && pandoc "$IN" -o "$OUT" || exit 0

      - name: Upload PDF artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Daily_Status_PDF
          path: docs/elaya_status/*.pdf
      # --- конец PDF блока ---

      - name: Send Telegram notify
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT_ID:   ${{ secrets.TG_REPORT_CHAT_ID }}
          OUT:          ${{ steps.build.outputs.OUT }}
        run: |
          # если секретов нет — тихо пропустим
          [ -z "$TG_BOT_TOKEN" ] && exit 0
          [ -z "$TG_CHAT_ID" ] && exit 0

          FILE_URL="https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/main/${OUT}"
          SHORT_SHA="${GITHUB_SHA::7}"

          TEXT="🧾 Ежедневный отчёт\n• ENV: develop\n• Branch: ${GITHUB_REF_NAME}\n• SHA: ${SHORT_SHA}\n• File: ${FILE_URL}"
          curl -sS -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage" \
            -d "chat_id=${TG_CHAT_ID}" \
            --data-urlencode "text=${TEXT}" \
            -d "disable_web_page_preview=true" \
            -d "parse_mode=HTML" >/dev/null
