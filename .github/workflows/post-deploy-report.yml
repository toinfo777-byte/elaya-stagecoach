name: Post-deploy status report

on:
  repository_dispatch:
    types: [status_report]
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  post_deploy_report:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Generate post-deploy Markdown (inline)
        run: |
          python - <<'PY'
          import os, datetime, pathlib
          repo = os.environ.get("GITHUB_REPOSITORY","")
          sha  = os.environ.get("GITHUB_SHA","")[:7]
          now  = datetime.datetime.utcnow()
          date = now.strftime("%Y%m%d")
          ts   = now.strftime("%Y-%m-%d %H:%M:%SZ")
          out  = pathlib.Path("docs/elaya_status"); out.mkdir(parents=True, exist_ok=True)
          f    = out / f"Elaya_Status_{date}.md"
          base = [
            f"# Elaya Status — {date}",
            "",
            f"- Repo: `{repo}`",
            f"- SHA: `{sha}`",
            f"- Generated (UTC): {ts}",
            "",
            "Post-deploy summary (repository_dispatch/workflow_dispatch).",
            "",
          ]
          if f.exists():
            content = f.read_text(encoding="utf-8").splitlines()
            content += ["", f"**Post-deploy update at {ts} (UTC)**", f"- SHA: `{sha}`", ""]
          else:
            content = base
          f.write_text("\n".join(content), encoding="utf-8")
          print(f"Wrote {f}")
          PY

      - name: Commit & push report
        run: |
          git config user.name  "elaya-bot"
          git config user.email "actions@users.noreply.github.com"
          git add docs/elaya_status/Elaya_Status_*.md
          git commit -m "chore(report): post-deploy status $(date -u +%Y-%m-%dT%H:%M:%SZ)" || echo "Nothing to commit"
          git push

      # ---------- Telegram DIAG ----------
      - name: Telegram getMe (print username/id)
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
        run: |
          echo "== getMe =="
          curl -sS "https://api.telegram.org/bot${TG_BOT_TOKEN}/getMe" | tee /tmp/getme.json
          echo

      - name: Telegram getChat (check bot sees the group)
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_STATUS_CHAT_ID: ${{ secrets.TG_STATUS_CHAT_ID }}
        run: |
          echo "== getChat ${TG_STATUS_CHAT_ID} =="
          curl -sS -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/getChat" \
            -d "chat_id=${TG_STATUS_CHAT_ID}" | tee /tmp/getchat.json
          echo

      - name: Telegram sendMessage to group (print response)
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_STATUS_CHAT_ID: ${{ secrets.TG_STATUS_CHAT_ID }}
        run: |
          echo "== sendMessage to status chat =="
          SHORT_SHA="${GITHUB_SHA::7}"
          MSG="🟢 Post-deploy ok · repo=${GITHUB_REPOSITORY} · sha=${SHORT_SHA}"
          curl -sS -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage" \
            -d "chat_id=${TG_STATUS_CHAT_ID}" \
            -d "text=${MSG}" \
            -d "disable_web_page_preview=true" \
            -d "parse_mode=HTML" | tee /tmp/send_to_group.json
          echo

      # опционально: fallback в личку (если есть секрет TG_REPORT_CHAT_ID)
      - name: Telegram fallback DM (optional)
        if: ${{ secrets.TG_REPORT_CHAT_ID != '' }}
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_REPORT_CHAT_ID: ${{ secrets.TG_REPORT_CHAT_ID }}
        run: |
          echo "== fallback DM to TG_REPORT_CHAT_ID =="
          SHORT_SHA="${GITHUB_SHA::7}"
          MSG="🔁 Fallback DM: repo=${GITHUB_REPOSITORY} · sha=${SHORT_SHA}"
          curl -sS -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage" \
            -d "chat_id=${TG_REPORT_CHAT_ID}" \
            -d "text=${MSG}" \
            -d "disable_web_page_preview=true" \
            -d "parse_mode=HTML" | tee /tmp/send_dm.json
          echo
      # -----------------------------------
