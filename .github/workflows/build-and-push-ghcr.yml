name: Build & Push Docker image to GHCR

on:
  push:
    branches: [ "develop" ]
    paths-ignore:
      - "**.md"
      - "**/.gitignore"
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=develop
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # –¢—Ä–∏–≥–≥–µ—Ä Render (staging ‚Üí prod fallback), –º—è–≥–∫–∏–π —Ä–µ–∂–∏–º
      - name: Trigger Render deploy (safe mode)
        if: ${{ success() }}
        env:
          RENDER_STAGING_HOOK: ${{ secrets.RENDER_STAGING_HOOK }}
          RENDER_DEPLOY_HOOK:  ${{ secrets.RENDER_DEPLOY_HOOK }}
        shell: bash
        run: |
          HOOK_URL="${RENDER_STAGING_HOOK:-$RENDER_DEPLOY_HOOK}"

          if [ -z "$HOOK_URL" ]; then
            echo "üîπ No Render hook configured. Skipping deploy trigger."
            exit 0
          fi

          echo "üîπ Triggering Render hook..."
          sleep 10

          HTTP_CODE=$(curl -sS -o >(cat >&2) -w "%{http_code}" -X POST "$HOOK_URL" || true)
          echo "üîπ Render HTTP code: $HTTP_CODE"

          if [[ "$HTTP_CODE" =~ ^(200|201|202)$ ]]; then
            echo "‚úÖ Render accepted deploy ($HTTP_CODE)"
          else
            echo "‚ö†Ô∏è Render returned non-2xx ($HTTP_CODE). Continuing."
          fi

          # –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 0, —á—Ç–æ–±—ã –ø–∞–π–ø–ª–∞–π–Ω –Ω–µ –ø–∞–¥–∞–ª
          exit 0

      # –ü–æ—Å–ª–µ –¥–µ–ø–ª–æ—è ‚Äî —Ä–µ–ø–æ—Ä—Ç –≤ main
      - name: Dispatch post-deploy status_report
        if: ${{ success() }}
        run: |
          curl -fsS -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "${{ github.api_url }}/repos/${{ github.repository }}/dispatches" \
            -d '{"event_type":"status_report","client_payload":{"source":"render_deploy","env":"develop"}}' || true
