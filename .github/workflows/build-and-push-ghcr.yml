name: Build & Push Docker image to GHCR

on:
  workflow_dispatch:
  push:
    branches: [ "elaya-core-202510", "develop" ]
    paths-ignore:
      - "docs/**"
      - "**/*.md"

permissions:
  contents: read
  packages: write

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute build meta
        run: |
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "BUILD_MARK=deploy-${{ github.run_id }}-$(date -u +'%Y%m%dT%H%M%SZ')" >> $GITHUB_ENV
          echo "IMAGE_TAG=ghcr.io/${{ github.repository_owner }}/elaya-stagecoach:develop" >> $GITHUB_ENV

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}/elaya-stagecoach:develop
            ghcr.io/${{ github.repository_owner }}/elaya-stagecoach:${{ github.sha }}
          labels: |
            org.opencontainers.image.revision=${{ env.SHORT_SHA }}
            org.opencontainers.image.version=${{ env.BUILD_MARK }}
            org.opencontainers.image.source=${{ github.repository }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

      - name: Trigger Render deploy
        if: ${{ success() }}
        env:
          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
        run: |
          if [ -n "$RENDER_DEPLOY_HOOK" ]; then
            echo "Triggering Render via hook..."
            curl -fsS -X POST "$RENDER_DEPLOY_HOOK"
          else
            echo "⚠️ No RENDER_DEPLOY_HOOK secret set, skipping."
          fi

      - name: Dispatch status_sync
        if: ${{ success() }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          API="${{ github.api_url }}/repos/${{ github.repository }}/dispatches"
          PAYLOAD=$(jq -n \
            --arg t "status_sync" \
            --arg bm "${{ env.BUILD_MARK }}" \
            --arg sha "${{ env.SHORT_SHA }}" \
            --arg img "${{ env.IMAGE_TAG }}" \
            --arg envv "develop" \
            --arg blk "Build" \
            --arg cnt "" \
            '{event_type:$t, client_payload:{BUILD_MARK:$bm, SHORT_SHA:$sha, IMAGE_TAG:$img, ENV:$envv, block:$blk, content:$cnt}}')
          curl -fsS -X POST "$API" \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            -d "$PAYLOAD"
